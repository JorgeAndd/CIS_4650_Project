%{
	#include "y.tab.h"
	#include <stdio.h>
%}

%option yylineno
%x COMMENT

%%

"/*"            { BEGIN(COMMENT); }
<COMMENT>"*/" { BEGIN(INITIAL); }
<COMMENT>.    { }

[0-9]+								printf("INT\n"); yylval.ival = atoi(yytext); return INT;
[0-9]+\.[0-9]+([Ee][+-]?[0-9]+)?	printf("FLOAT\n"); yylval.fval = atof(yytext); return FLOAT;
\'[a-zA-Z]\'						printf("CHAR\n"); yylval.cval = *yytext; return CHAR;

"=="	return EQUAL;
"!="	return DIFF;
">="	return GE;
"<="	return LE;

"&&"	return AND;
"||"	return OR;
"!"		return NOT;

"="			return ASSIGN;
"sizeof"	return SIZEOF;
"typedef"	printf("TYPEDEF\n"); return TYPEDEF;

"int"		printf("TKINT\n"); return TKINT;
"char"		return TKCHAR;
"float"		return TKFLOAT;

"++"	return INC;
"--"	return DEC;

"."		return DOT;
"'"		return QUOTE;
";"		printf("SEMICOLON\n"); return SEMICOLON;
","		return COMMA;

"{"		return OBRACES;
"}"		return CBRACES;
"("		printf("OPAR\n"); return OPAR;
")" 	printf("CPAR\n"); return CPAR;
"["		return OBRACKET;
"]"		return CBRACKET;

"if"		return IF;
"else"		return ELSE;
"for"		return FOR;
"while"		return WHILE;
"return"	return RETURN;
"void"		return VOID;
"struct"	return STRUCT;

[a-zA-Z_][a-zA-Z0-9]*				printf("NAME\n"); yylval.sval = strdup(yytext); return NAME;
\n			/*ignores new line*/
[ \t]+		/*ignores whitespace*/
.			printf("OTHER\n"); return *yytext;	

%%
 
