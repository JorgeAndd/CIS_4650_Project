Terminals unused in grammar

   QUOTE


Grammar

    0 $accept: program $end

    1 program: type_decl_list var_decl_list function_def_list
    2        | var_decl_list function_def_list
    3        | function_def_list
    4        | %empty

    5 type_decl_list: type_decl SEMICOLON
    6               | type_decl_list type_decl SEMICOLON

    7 type_name: TKINT
    8          | TKFLOAT
    9          | TKCHAR

   10 type_decl: TYPEDEF type_name NAME
   11          | TYPEDEF struct_decl NAME

   12 struct_decl: STRUCT OBRACES var_decl_list CBRACES

   13 var_decl: type_name id_list
   14         | NAME id_list

   15 id_list: id_name
   16        | id_name COMMA id_list

   17 id_name: NAME
   18        | NAME OBRACKET INT CBRACKET

   19 function_def_list: function_def
   20                  | function_def_list function_def

   21 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body CBRACES
   22             | VOID NAME OPAR param_list CPAR OBRACES func_body CBRACES

   23 param_list: type_name id_name param_decl
   24           | NAME id_name param_decl
   25           | %empty

   26 param_decl: COMMA type_name id_name param_decl
   27           | COMMA NAME id_name param_decl
   28           | %empty

   29 func_body: var_decl_list stmt_list
   30          | stmt_list
   31          | %empty

   32 var_decl_list: var_decl SEMICOLON
   33              | var_decl_list var_decl SEMICOLON

   34 stmt_list: stmt
   35          | stmt_list stmt

   36 stmt: expr_stmt
   37     | compound_stmt
   38     | select_stmt
   39     | iter_stmt
   40     | return_stmt

   41 expr_stmt: expr SEMICOLON

   42 compound_stmt: OBRACES stmt_list CBRACES

   43 select_stmt: IF OPAR expr CPAR stmt
   44            | IF OPAR expr CPAR stmt ELSE stmt

   45 iter_stmt: WHILE OPAR expr CPAR stmt
   46          | FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt
   47          | FOR OPAR SEMICOLON expr SEMICOLON expr CPAR stmt
   48          | FOR OPAR expr SEMICOLON SEMICOLON expr CPAR stmt
   49          | FOR OPAR expr SEMICOLON expr SEMICOLON CPAR stmt
   50          | FOR OPAR SEMICOLON SEMICOLON expr CPAR stmt
   51          | FOR OPAR expr SEMICOLON SEMICOLON CPAR stmt
   52          | FOR OPAR SEMICOLON expr SEMICOLON CPAR stmt
   53          | FOR OPAR SEMICOLON SEMICOLON CPAR stmt

   54 return_stmt: RETURN expr SEMICOLON
   55            | RETURN SEMICOLON

   56 function_call: NAME OPAR call_param_list CPAR

   57 call_param_list: NAME call_param
   58                | %empty

   59 call_param: COMMA NAME call_param
   60           | %empty

   61 expr: expr '+' expr
   62     | expr '-' expr
   63     | expr '*' expr
   64     | expr '/' expr
   65     | expr '%' expr
   66     | expr '>' expr
   67     | expr '<' expr
   68     | expr GE expr
   69     | expr LE expr
   70     | expr DIFF expr
   71     | expr EQUAL expr
   72     | expr OR expr
   73     | expr AND expr
   74     | NOT expr
   75     | MINUS expr
   76     | PLUS expr
   77     | OPAR expr CPAR
   78     | function_call
   79     | var ASSIGN expr
   80     | var
   81     | var INC
   82     | var DEC
   83     | INC var
   84     | DEC var
   85     | SIZEOF OPAR expr CPAR
   86     | SIZEOF OPAR type_name CPAR
   87     | constant

   88 var: NAME
   89    | NAME OBRACKET expr CBRACKET
   90    | NAME DOT var

   91 constant: const_int
   92         | const_float
   93         | const_char

   94 const_int: INT

   95 const_float: FLOAT

   96 const_char: CHAR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 65
'*' (42) 63
'+' (43) 61
'-' (45) 62
'/' (47) 64
'<' (60) 67
'>' (62) 66
error (256)
PLUS (258) 76
MINUS (259) 75
EQUAL (260) 71
DIFF (261) 70
GE (262) 68
LE (263) 69
AND (264) 73
OR (265) 72
NOT (266) 74
TYPEDEF (267) 10 11
ASSIGN (268) 79
SIZEOF (269) 85 86
TKINT (270) 7
TKFLOAT (271) 8
TKCHAR (272) 9
INC (273) 81 83
DEC (274) 82 84
DOT (275) 90
QUOTE (276)
SEMICOLON (277) 5 6 32 33 41 46 47 48 49 50 51 52 53 54 55
COMMA (278) 16 26 27 59
OBRACES (279) 12 21 22 42
CBRACES (280) 12 21 22 42
OPAR (281) 21 22 43 44 45 46 47 48 49 50 51 52 53 56 77 85 86
CPAR (282) 21 22 43 44 45 46 47 48 49 50 51 52 53 56 77 85 86
OBRACKET (283) 18 89
CBRACKET (284) 18 89
IF (285) 43 44
ELSE (286) 44
FOR (287) 46 47 48 49 50 51 52 53
WHILE (288) 45
RETURN (289) 54 55
VOID (290) 22
STRUCT (291) 12
INT (292) 18 94
FLOAT (293) 95
CHAR (294) 96
NAME (295) 10 11 14 17 18 21 22 24 27 56 57 59 88 89 90
THEN (296)
UNMINUS (297)
UNPLUS (298)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2 3 4, on right: 0
type_decl_list (53)
    on left: 5 6, on right: 1 6
type_name (54)
    on left: 7 8 9, on right: 10 13 21 23 26 86
type_decl (55)
    on left: 10 11, on right: 5 6
struct_decl (56)
    on left: 12, on right: 11
var_decl (57)
    on left: 13 14, on right: 32 33
id_list (58)
    on left: 15 16, on right: 13 14 16
id_name (59)
    on left: 17 18, on right: 15 16 23 24 26 27
function_def_list (60)
    on left: 19 20, on right: 1 2 3 20
function_def (61)
    on left: 21 22, on right: 19 20
param_list (62)
    on left: 23 24 25, on right: 21 22
param_decl (63)
    on left: 26 27 28, on right: 23 24 26 27
func_body (64)
    on left: 29 30 31, on right: 21 22
var_decl_list (65)
    on left: 32 33, on right: 1 2 12 29 33
stmt_list (66)
    on left: 34 35, on right: 29 30 35 42
stmt (67)
    on left: 36 37 38 39 40, on right: 34 35 43 44 45 46 47 48 49 50
    51 52 53
expr_stmt (68)
    on left: 41, on right: 36
compound_stmt (69)
    on left: 42, on right: 37
select_stmt (70)
    on left: 43 44, on right: 38
iter_stmt (71)
    on left: 45 46 47 48 49 50 51 52 53, on right: 39
return_stmt (72)
    on left: 54 55, on right: 40
function_call (73)
    on left: 56, on right: 78
call_param_list (74)
    on left: 57 58, on right: 56
call_param (75)
    on left: 59 60, on right: 57 59
expr (76)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 85 86 87, on right: 41 43 44 45 46 47 48 49 50
    51 52 54 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79
    85 89
var (77)
    on left: 88 89 90, on right: 79 80 81 82 83 84 90
constant (78)
    on left: 91 92 93, on right: 87
const_int (79)
    on left: 94, on right: 91
const_float (80)
    on left: 95, on right: 92
const_char (81)
    on left: 96, on right: 93


State 0

    0 $accept: . program $end

    TYPEDEF  shift, and go to state 1
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5
    NAME     shift, and go to state 6

    $default  reduce using rule 4 (program)

    program            go to state 7
    type_decl_list     go to state 8
    type_name          go to state 9
    type_decl          go to state 10
    var_decl           go to state 11
    function_def_list  go to state 12
    function_def       go to state 13
    var_decl_list      go to state 14


State 1

   10 type_decl: TYPEDEF . type_name NAME
   11          | TYPEDEF . struct_decl NAME

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    STRUCT   shift, and go to state 15

    type_name    go to state 16
    struct_decl  go to state 17


State 2

    7 type_name: TKINT .

    $default  reduce using rule 7 (type_name)


State 3

    8 type_name: TKFLOAT .

    $default  reduce using rule 8 (type_name)


State 4

    9 type_name: TKCHAR .

    $default  reduce using rule 9 (type_name)


State 5

   22 function_def: VOID . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 18


State 6

   14 var_decl: NAME . id_list

    NAME  shift, and go to state 19

    id_list  go to state 20
    id_name  go to state 21


State 7

    0 $accept: program . $end

    $end  shift, and go to state 22


State 8

    1 program: type_decl_list . var_decl_list function_def_list
    6 type_decl_list: type_decl_list . type_decl SEMICOLON

    TYPEDEF  shift, and go to state 1
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    NAME     shift, and go to state 6

    type_name      go to state 23
    type_decl      go to state 24
    var_decl       go to state 11
    var_decl_list  go to state 25


State 9

   13 var_decl: type_name . id_list
   21 function_def: type_name . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 26

    id_list  go to state 27
    id_name  go to state 21


State 10

    5 type_decl_list: type_decl . SEMICOLON

    SEMICOLON  shift, and go to state 28


State 11

   32 var_decl_list: var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 12

    3 program: function_def_list .
   20 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 3 (program)

    type_name     go to state 30
    function_def  go to state 31


State 13

   19 function_def_list: function_def .

    $default  reduce using rule 19 (function_def_list)


State 14

    2 program: var_decl_list . function_def_list
   33 var_decl_list: var_decl_list . var_decl SEMICOLON

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5
    NAME     shift, and go to state 6

    type_name          go to state 9
    var_decl           go to state 32
    function_def_list  go to state 33
    function_def       go to state 13


State 15

   12 struct_decl: STRUCT . OBRACES var_decl_list CBRACES

    OBRACES  shift, and go to state 34


State 16

   10 type_decl: TYPEDEF type_name . NAME

    NAME  shift, and go to state 35


State 17

   11 type_decl: TYPEDEF struct_decl . NAME

    NAME  shift, and go to state 36


State 18

   22 function_def: VOID NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR  shift, and go to state 37


State 19

   17 id_name: NAME .
   18        | NAME . OBRACKET INT CBRACKET

    OBRACKET  shift, and go to state 38

    $default  reduce using rule 17 (id_name)


State 20

   14 var_decl: NAME id_list .

    $default  reduce using rule 14 (var_decl)


State 21

   15 id_list: id_name .
   16        | id_name . COMMA id_list

    COMMA  shift, and go to state 39

    $default  reduce using rule 15 (id_list)


State 22

    0 $accept: program $end .

    $default  accept


State 23

   13 var_decl: type_name . id_list

    NAME  shift, and go to state 19

    id_list  go to state 27
    id_name  go to state 21


State 24

    6 type_decl_list: type_decl_list type_decl . SEMICOLON

    SEMICOLON  shift, and go to state 40


State 25

    1 program: type_decl_list var_decl_list . function_def_list
   33 var_decl_list: var_decl_list . var_decl SEMICOLON

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5
    NAME     shift, and go to state 6

    type_name          go to state 9
    var_decl           go to state 32
    function_def_list  go to state 41
    function_def       go to state 13


State 26

   17 id_name: NAME .
   18        | NAME . OBRACKET INT CBRACKET
   21 function_def: type_name NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR      shift, and go to state 42
    OBRACKET  shift, and go to state 38

    $default  reduce using rule 17 (id_name)


State 27

   13 var_decl: type_name id_list .

    $default  reduce using rule 13 (var_decl)


State 28

    5 type_decl_list: type_decl SEMICOLON .

    $default  reduce using rule 5 (type_decl_list)


State 29

   32 var_decl_list: var_decl SEMICOLON .

    $default  reduce using rule 32 (var_decl_list)


State 30

   21 function_def: type_name . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 43


State 31

   20 function_def_list: function_def_list function_def .

    $default  reduce using rule 20 (function_def_list)


State 32

   33 var_decl_list: var_decl_list var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 33

    2 program: var_decl_list function_def_list .
   20 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 2 (program)

    type_name     go to state 30
    function_def  go to state 31


State 34

   12 struct_decl: STRUCT OBRACES . var_decl_list CBRACES

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    NAME     shift, and go to state 6

    type_name      go to state 23
    var_decl       go to state 11
    var_decl_list  go to state 45


State 35

   10 type_decl: TYPEDEF type_name NAME .

    $default  reduce using rule 10 (type_decl)


State 36

   11 type_decl: TYPEDEF struct_decl NAME .

    $default  reduce using rule 11 (type_decl)


State 37

   22 function_def: VOID NAME OPAR . param_list CPAR OBRACES func_body CBRACES

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    NAME     shift, and go to state 46

    $default  reduce using rule 25 (param_list)

    type_name   go to state 47
    param_list  go to state 48


State 38

   18 id_name: NAME OBRACKET . INT CBRACKET

    INT  shift, and go to state 49


State 39

   16 id_list: id_name COMMA . id_list

    NAME  shift, and go to state 19

    id_list  go to state 50
    id_name  go to state 21


State 40

    6 type_decl_list: type_decl_list type_decl SEMICOLON .

    $default  reduce using rule 6 (type_decl_list)


State 41

    1 program: type_decl_list var_decl_list function_def_list .
   20 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 1 (program)

    type_name     go to state 30
    function_def  go to state 31


State 42

   21 function_def: type_name NAME OPAR . param_list CPAR OBRACES func_body CBRACES

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    NAME     shift, and go to state 46

    $default  reduce using rule 25 (param_list)

    type_name   go to state 47
    param_list  go to state 51


State 43

   21 function_def: type_name NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR  shift, and go to state 42


State 44

   33 var_decl_list: var_decl_list var_decl SEMICOLON .

    $default  reduce using rule 33 (var_decl_list)


State 45

   12 struct_decl: STRUCT OBRACES var_decl_list . CBRACES
   33 var_decl_list: var_decl_list . var_decl SEMICOLON

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    CBRACES  shift, and go to state 52
    NAME     shift, and go to state 6

    type_name  go to state 23
    var_decl   go to state 32


State 46

   24 param_list: NAME . id_name param_decl

    NAME  shift, and go to state 19

    id_name  go to state 53


State 47

   23 param_list: type_name . id_name param_decl

    NAME  shift, and go to state 19

    id_name  go to state 54


State 48

   22 function_def: VOID NAME OPAR param_list . CPAR OBRACES func_body CBRACES

    CPAR  shift, and go to state 55


State 49

   18 id_name: NAME OBRACKET INT . CBRACKET

    CBRACKET  shift, and go to state 56


State 50

   16 id_list: id_name COMMA id_list .

    $default  reduce using rule 16 (id_list)


State 51

   21 function_def: type_name NAME OPAR param_list . CPAR OBRACES func_body CBRACES

    CPAR  shift, and go to state 57


State 52

   12 struct_decl: STRUCT OBRACES var_decl_list CBRACES .

    $default  reduce using rule 12 (struct_decl)


State 53

   24 param_list: NAME id_name . param_decl

    COMMA  shift, and go to state 58

    $default  reduce using rule 28 (param_decl)

    param_decl  go to state 59


State 54

   23 param_list: type_name id_name . param_decl

    COMMA  shift, and go to state 58

    $default  reduce using rule 28 (param_decl)

    param_decl  go to state 60


State 55

   22 function_def: VOID NAME OPAR param_list CPAR . OBRACES func_body CBRACES

    OBRACES  shift, and go to state 61


State 56

   18 id_name: NAME OBRACKET INT CBRACKET .

    $default  reduce using rule 18 (id_name)


State 57

   21 function_def: type_name NAME OPAR param_list CPAR . OBRACES func_body CBRACES

    OBRACES  shift, and go to state 62


State 58

   26 param_decl: COMMA . type_name id_name param_decl
   27           | COMMA . NAME id_name param_decl

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    NAME     shift, and go to state 63

    type_name  go to state 64


State 59

   24 param_list: NAME id_name param_decl .

    $default  reduce using rule 24 (param_list)


State 60

   23 param_list: type_name id_name param_decl .

    $default  reduce using rule 23 (param_list)


State 61

   22 function_def: VOID NAME OPAR param_list CPAR OBRACES . func_body CBRACES

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 80

    $default  reduce using rule 31 (func_body)

    type_name      go to state 23
    var_decl       go to state 11
    func_body      go to state 81
    var_decl_list  go to state 82
    stmt_list      go to state 83
    stmt           go to state 84
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 62

   21 function_def: type_name NAME OPAR param_list CPAR OBRACES . func_body CBRACES

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 80

    $default  reduce using rule 31 (func_body)

    type_name      go to state 23
    var_decl       go to state 11
    func_body      go to state 97
    var_decl_list  go to state 82
    stmt_list      go to state 83
    stmt           go to state 84
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 63

   27 param_decl: COMMA NAME . id_name param_decl

    NAME  shift, and go to state 19

    id_name  go to state 98


State 64

   26 param_decl: COMMA type_name . id_name param_decl

    NAME  shift, and go to state 19

    id_name  go to state 99


State 65

   76 expr: PLUS . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 101
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 66

   75 expr: MINUS . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 102
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 67

   74 expr: NOT . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 103
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 68

   85 expr: SIZEOF . OPAR expr CPAR
   86     | SIZEOF . OPAR type_name CPAR

    OPAR  shift, and go to state 104


State 69

   83 expr: INC . var

    NAME  shift, and go to state 105

    var  go to state 106


State 70

   84 expr: DEC . var

    NAME  shift, and go to state 105

    var  go to state 107


State 71

   42 compound_stmt: OBRACES . stmt_list CBRACES

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt_list      go to state 108
    stmt           go to state 84
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 72

   77 expr: OPAR . expr CPAR

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 109
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 73

   43 select_stmt: IF . OPAR expr CPAR stmt
   44            | IF . OPAR expr CPAR stmt ELSE stmt

    OPAR  shift, and go to state 110


State 74

   46 iter_stmt: FOR . OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt
   47          | FOR . OPAR SEMICOLON expr SEMICOLON expr CPAR stmt
   48          | FOR . OPAR expr SEMICOLON SEMICOLON expr CPAR stmt
   49          | FOR . OPAR expr SEMICOLON expr SEMICOLON CPAR stmt
   50          | FOR . OPAR SEMICOLON SEMICOLON expr CPAR stmt
   51          | FOR . OPAR expr SEMICOLON SEMICOLON CPAR stmt
   52          | FOR . OPAR SEMICOLON expr SEMICOLON CPAR stmt
   53          | FOR . OPAR SEMICOLON SEMICOLON CPAR stmt

    OPAR  shift, and go to state 111


State 75

   45 iter_stmt: WHILE . OPAR expr CPAR stmt

    OPAR  shift, and go to state 112


State 76

   54 return_stmt: RETURN . expr SEMICOLON
   55            | RETURN . SEMICOLON

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    SIZEOF     shift, and go to state 68
    INC        shift, and go to state 69
    DEC        shift, and go to state 70
    SEMICOLON  shift, and go to state 113
    OPAR       shift, and go to state 72
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    CHAR       shift, and go to state 79
    NAME       shift, and go to state 100

    function_call  go to state 90
    expr           go to state 114
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 77

   94 const_int: INT .

    $default  reduce using rule 94 (const_int)


State 78

   95 const_float: FLOAT .

    $default  reduce using rule 95 (const_float)


State 79

   96 const_char: CHAR .

    $default  reduce using rule 96 (const_char)


State 80

   14 var_decl: NAME . id_list
   56 function_call: NAME . OPAR call_param_list CPAR
   88 var: NAME .
   89    | NAME . OBRACKET expr CBRACKET
   90    | NAME . DOT var

    DOT       shift, and go to state 115
    OPAR      shift, and go to state 116
    OBRACKET  shift, and go to state 117
    NAME      shift, and go to state 19

    $default  reduce using rule 88 (var)

    id_list  go to state 20
    id_name  go to state 21


State 81

   22 function_def: VOID NAME OPAR param_list CPAR OBRACES func_body . CBRACES

    CBRACES  shift, and go to state 118


State 82

   29 func_body: var_decl_list . stmt_list
   33 var_decl_list: var_decl_list . var_decl SEMICOLON

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 80

    type_name      go to state 23
    var_decl       go to state 32
    stmt_list      go to state 119
    stmt           go to state 84
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 83

   30 func_body: stmt_list .
   35 stmt_list: stmt_list . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    $default  reduce using rule 30 (func_body)

    stmt           go to state 120
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 84

   34 stmt_list: stmt .

    $default  reduce using rule 34 (stmt_list)


State 85

   36 stmt: expr_stmt .

    $default  reduce using rule 36 (stmt)


State 86

   37 stmt: compound_stmt .

    $default  reduce using rule 37 (stmt)


State 87

   38 stmt: select_stmt .

    $default  reduce using rule 38 (stmt)


State 88

   39 stmt: iter_stmt .

    $default  reduce using rule 39 (stmt)


State 89

   40 stmt: return_stmt .

    $default  reduce using rule 40 (stmt)


State 90

   78 expr: function_call .

    $default  reduce using rule 78 (expr)


State 91

   41 expr_stmt: expr . SEMICOLON
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL      shift, and go to state 121
    DIFF       shift, and go to state 122
    GE         shift, and go to state 123
    LE         shift, and go to state 124
    AND        shift, and go to state 125
    OR         shift, and go to state 126
    SEMICOLON  shift, and go to state 127
    '<'        shift, and go to state 128
    '>'        shift, and go to state 129
    '+'        shift, and go to state 130
    '-'        shift, and go to state 131
    '*'        shift, and go to state 132
    '/'        shift, and go to state 133
    '%'        shift, and go to state 134


State 92

   79 expr: var . ASSIGN expr
   80     | var .
   81     | var . INC
   82     | var . DEC

    ASSIGN  shift, and go to state 135
    INC     shift, and go to state 136
    DEC     shift, and go to state 137

    $default  reduce using rule 80 (expr)


State 93

   87 expr: constant .

    $default  reduce using rule 87 (expr)


State 94

   91 constant: const_int .

    $default  reduce using rule 91 (constant)


State 95

   92 constant: const_float .

    $default  reduce using rule 92 (constant)


State 96

   93 constant: const_char .

    $default  reduce using rule 93 (constant)


State 97

   21 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body . CBRACES

    CBRACES  shift, and go to state 138


State 98

   27 param_decl: COMMA NAME id_name . param_decl

    COMMA  shift, and go to state 58

    $default  reduce using rule 28 (param_decl)

    param_decl  go to state 139


State 99

   26 param_decl: COMMA type_name id_name . param_decl

    COMMA  shift, and go to state 58

    $default  reduce using rule 28 (param_decl)

    param_decl  go to state 140


State 100

   56 function_call: NAME . OPAR call_param_list CPAR
   88 var: NAME .
   89    | NAME . OBRACKET expr CBRACKET
   90    | NAME . DOT var

    DOT       shift, and go to state 115
    OPAR      shift, and go to state 116
    OBRACKET  shift, and go to state 117

    $default  reduce using rule 88 (var)


State 101

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   76     | PLUS expr .

    $default  reduce using rule 76 (expr)


State 102

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   75     | MINUS expr .

    $default  reduce using rule 75 (expr)


State 103

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   74     | NOT expr .

    $default  reduce using rule 74 (expr)


State 104

   85 expr: SIZEOF OPAR . expr CPAR
   86     | SIZEOF OPAR . type_name CPAR

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OPAR     shift, and go to state 72
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    type_name      go to state 141
    function_call  go to state 90
    expr           go to state 142
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 105

   88 var: NAME .
   89    | NAME . OBRACKET expr CBRACKET
   90    | NAME . DOT var

    DOT       shift, and go to state 115
    OBRACKET  shift, and go to state 117

    $default  reduce using rule 88 (var)


State 106

   83 expr: INC var .

    $default  reduce using rule 83 (expr)


State 107

   84 expr: DEC var .

    $default  reduce using rule 84 (expr)


State 108

   35 stmt_list: stmt_list . stmt
   42 compound_stmt: OBRACES stmt_list . CBRACES

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    CBRACES  shift, and go to state 143
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 120
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 109

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   77     | OPAR expr . CPAR

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 144
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 110

   43 select_stmt: IF OPAR . expr CPAR stmt
   44            | IF OPAR . expr CPAR stmt ELSE stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 145
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 111

   46 iter_stmt: FOR OPAR . expr SEMICOLON expr SEMICOLON expr CPAR stmt
   47          | FOR OPAR . SEMICOLON expr SEMICOLON expr CPAR stmt
   48          | FOR OPAR . expr SEMICOLON SEMICOLON expr CPAR stmt
   49          | FOR OPAR . expr SEMICOLON expr SEMICOLON CPAR stmt
   50          | FOR OPAR . SEMICOLON SEMICOLON expr CPAR stmt
   51          | FOR OPAR . expr SEMICOLON SEMICOLON CPAR stmt
   52          | FOR OPAR . SEMICOLON expr SEMICOLON CPAR stmt
   53          | FOR OPAR . SEMICOLON SEMICOLON CPAR stmt

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    SIZEOF     shift, and go to state 68
    INC        shift, and go to state 69
    DEC        shift, and go to state 70
    SEMICOLON  shift, and go to state 146
    OPAR       shift, and go to state 72
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    CHAR       shift, and go to state 79
    NAME       shift, and go to state 100

    function_call  go to state 90
    expr           go to state 147
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 112

   45 iter_stmt: WHILE OPAR . expr CPAR stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 148
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 113

   55 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 55 (return_stmt)


State 114

   54 return_stmt: RETURN expr . SEMICOLON
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL      shift, and go to state 121
    DIFF       shift, and go to state 122
    GE         shift, and go to state 123
    LE         shift, and go to state 124
    AND        shift, and go to state 125
    OR         shift, and go to state 126
    SEMICOLON  shift, and go to state 149
    '<'        shift, and go to state 128
    '>'        shift, and go to state 129
    '+'        shift, and go to state 130
    '-'        shift, and go to state 131
    '*'        shift, and go to state 132
    '/'        shift, and go to state 133
    '%'        shift, and go to state 134


State 115

   90 var: NAME DOT . var

    NAME  shift, and go to state 105

    var  go to state 150


State 116

   56 function_call: NAME OPAR . call_param_list CPAR

    NAME  shift, and go to state 151

    $default  reduce using rule 58 (call_param_list)

    call_param_list  go to state 152


State 117

   89 var: NAME OBRACKET . expr CBRACKET

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 153
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 118

   22 function_def: VOID NAME OPAR param_list CPAR OBRACES func_body CBRACES .

    $default  reduce using rule 22 (function_def)


State 119

   29 func_body: var_decl_list stmt_list .
   35 stmt_list: stmt_list . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    $default  reduce using rule 29 (func_body)

    stmt           go to state 120
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 120

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 121

   71 expr: expr EQUAL . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 154
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 122

   70 expr: expr DIFF . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 155
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 123

   68 expr: expr GE . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 156
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 124

   69 expr: expr LE . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 157
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 125

   73 expr: expr AND . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 158
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 126

   72 expr: expr OR . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 159
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 127

   41 expr_stmt: expr SEMICOLON .

    $default  reduce using rule 41 (expr_stmt)


State 128

   67 expr: expr '<' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 160
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 129

   66 expr: expr '>' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 161
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 130

   61 expr: expr '+' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 162
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 131

   62 expr: expr '-' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 163
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 132

   63 expr: expr '*' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 164
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 133

   64 expr: expr '/' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 165
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 134

   65 expr: expr '%' . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 166
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 135

   79 expr: var ASSIGN . expr

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 167
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 136

   81 expr: var INC .

    $default  reduce using rule 81 (expr)


State 137

   82 expr: var DEC .

    $default  reduce using rule 82 (expr)


State 138

   21 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body CBRACES .

    $default  reduce using rule 21 (function_def)


State 139

   27 param_decl: COMMA NAME id_name param_decl .

    $default  reduce using rule 27 (param_decl)


State 140

   26 param_decl: COMMA type_name id_name param_decl .

    $default  reduce using rule 26 (param_decl)


State 141

   86 expr: SIZEOF OPAR type_name . CPAR

    CPAR  shift, and go to state 168


State 142

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   85     | SIZEOF OPAR expr . CPAR

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 169
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 143

   42 compound_stmt: OBRACES stmt_list CBRACES .

    $default  reduce using rule 42 (compound_stmt)


State 144

   77 expr: OPAR expr CPAR .

    $default  reduce using rule 77 (expr)


State 145

   43 select_stmt: IF OPAR expr . CPAR stmt
   44            | IF OPAR expr . CPAR stmt ELSE stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 170
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 146

   47 iter_stmt: FOR OPAR SEMICOLON . expr SEMICOLON expr CPAR stmt
   50          | FOR OPAR SEMICOLON . SEMICOLON expr CPAR stmt
   52          | FOR OPAR SEMICOLON . expr SEMICOLON CPAR stmt
   53          | FOR OPAR SEMICOLON . SEMICOLON CPAR stmt

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    SIZEOF     shift, and go to state 68
    INC        shift, and go to state 69
    DEC        shift, and go to state 70
    SEMICOLON  shift, and go to state 171
    OPAR       shift, and go to state 72
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    CHAR       shift, and go to state 79
    NAME       shift, and go to state 100

    function_call  go to state 90
    expr           go to state 172
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 147

   46 iter_stmt: FOR OPAR expr . SEMICOLON expr SEMICOLON expr CPAR stmt
   48          | FOR OPAR expr . SEMICOLON SEMICOLON expr CPAR stmt
   49          | FOR OPAR expr . SEMICOLON expr SEMICOLON CPAR stmt
   51          | FOR OPAR expr . SEMICOLON SEMICOLON CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL      shift, and go to state 121
    DIFF       shift, and go to state 122
    GE         shift, and go to state 123
    LE         shift, and go to state 124
    AND        shift, and go to state 125
    OR         shift, and go to state 126
    SEMICOLON  shift, and go to state 173
    '<'        shift, and go to state 128
    '>'        shift, and go to state 129
    '+'        shift, and go to state 130
    '-'        shift, and go to state 131
    '*'        shift, and go to state 132
    '/'        shift, and go to state 133
    '%'        shift, and go to state 134


State 148

   45 iter_stmt: WHILE OPAR expr . CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 174
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 149

   54 return_stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 54 (return_stmt)


State 150

   90 var: NAME DOT var .

    $default  reduce using rule 90 (var)


State 151

   57 call_param_list: NAME . call_param

    COMMA  shift, and go to state 175

    $default  reduce using rule 60 (call_param)

    call_param  go to state 176


State 152

   56 function_call: NAME OPAR call_param_list . CPAR

    CPAR  shift, and go to state 177


State 153

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   89 var: NAME OBRACKET expr . CBRACKET

    EQUAL     shift, and go to state 121
    DIFF      shift, and go to state 122
    GE        shift, and go to state 123
    LE        shift, and go to state 124
    AND       shift, and go to state 125
    OR        shift, and go to state 126
    CBRACKET  shift, and go to state 178
    '<'       shift, and go to state 128
    '>'       shift, and go to state 129
    '+'       shift, and go to state 130
    '-'       shift, and go to state 131
    '*'       shift, and go to state 132
    '/'       shift, and go to state 133
    '%'       shift, and go to state 134


State 154

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   71     | expr EQUAL expr .
   72     | expr . OR expr
   73     | expr . AND expr

    GE   shift, and go to state 123
    LE   shift, and go to state 124
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 71 (expr)


State 155

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   70     | expr DIFF expr .
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    GE   shift, and go to state 123
    LE   shift, and go to state 124
    '<'  shift, and go to state 128
    '>'  shift, and go to state 129
    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 70 (expr)


State 156

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   68     | expr GE expr .
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 68 (expr)


State 157

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   69     | expr LE expr .
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 69 (expr)


State 158

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   73     | expr AND expr .

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134

    $default  reduce using rule 73 (expr)


State 159

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   72     | expr OR expr .
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134

    $default  reduce using rule 72 (expr)


State 160

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   67     | expr '<' expr .
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 67 (expr)


State 161

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   66     | expr '>' expr .
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '+'  shift, and go to state 130
    '-'  shift, and go to state 131
    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 66 (expr)


State 162

   61 expr: expr . '+' expr
   61     | expr '+' expr .
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 61 (expr)


State 163

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   62     | expr '-' expr .
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 62 (expr)


State 164

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   63     | expr '*' expr .
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    $default  reduce using rule 63 (expr)


State 165

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   64     | expr '/' expr .
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    $default  reduce using rule 64 (expr)


State 166

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   65     | expr '%' expr .
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    $default  reduce using rule 65 (expr)


State 167

   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr
   79     | var ASSIGN expr .

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134

    $default  reduce using rule 79 (expr)


State 168

   86 expr: SIZEOF OPAR type_name CPAR .

    $default  reduce using rule 86 (expr)


State 169

   85 expr: SIZEOF OPAR expr CPAR .

    $default  reduce using rule 85 (expr)


State 170

   43 select_stmt: IF OPAR expr CPAR . stmt
   44            | IF OPAR expr CPAR . stmt ELSE stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 179
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 171

   50 iter_stmt: FOR OPAR SEMICOLON SEMICOLON . expr CPAR stmt
   53          | FOR OPAR SEMICOLON SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    CPAR    shift, and go to state 180
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 181
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 172

   47 iter_stmt: FOR OPAR SEMICOLON expr . SEMICOLON expr CPAR stmt
   52          | FOR OPAR SEMICOLON expr . SEMICOLON CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL      shift, and go to state 121
    DIFF       shift, and go to state 122
    GE         shift, and go to state 123
    LE         shift, and go to state 124
    AND        shift, and go to state 125
    OR         shift, and go to state 126
    SEMICOLON  shift, and go to state 182
    '<'        shift, and go to state 128
    '>'        shift, and go to state 129
    '+'        shift, and go to state 130
    '-'        shift, and go to state 131
    '*'        shift, and go to state 132
    '/'        shift, and go to state 133
    '%'        shift, and go to state 134


State 173

   46 iter_stmt: FOR OPAR expr SEMICOLON . expr SEMICOLON expr CPAR stmt
   48          | FOR OPAR expr SEMICOLON . SEMICOLON expr CPAR stmt
   49          | FOR OPAR expr SEMICOLON . expr SEMICOLON CPAR stmt
   51          | FOR OPAR expr SEMICOLON . SEMICOLON CPAR stmt

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    SIZEOF     shift, and go to state 68
    INC        shift, and go to state 69
    DEC        shift, and go to state 70
    SEMICOLON  shift, and go to state 183
    OPAR       shift, and go to state 72
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    CHAR       shift, and go to state 79
    NAME       shift, and go to state 100

    function_call  go to state 90
    expr           go to state 184
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 174

   45 iter_stmt: WHILE OPAR expr CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 185
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 175

   59 call_param: COMMA . NAME call_param

    NAME  shift, and go to state 186


State 176

   57 call_param_list: NAME call_param .

    $default  reduce using rule 57 (call_param_list)


State 177

   56 function_call: NAME OPAR call_param_list CPAR .

    $default  reduce using rule 56 (function_call)


State 178

   89 var: NAME OBRACKET expr CBRACKET .

    $default  reduce using rule 89 (var)


State 179

   43 select_stmt: IF OPAR expr CPAR stmt .
   44            | IF OPAR expr CPAR stmt . ELSE stmt

    ELSE  shift, and go to state 187

    $default  reduce using rule 43 (select_stmt)


State 180

   53 iter_stmt: FOR OPAR SEMICOLON SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 188
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 181

   50 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr . CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 189
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 182

   47 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON . expr CPAR stmt
   52          | FOR OPAR SEMICOLON expr SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    CPAR    shift, and go to state 190
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 191
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 183

   48 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON . expr CPAR stmt
   51          | FOR OPAR expr SEMICOLON SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    CPAR    shift, and go to state 192
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 193
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 184

   46 iter_stmt: FOR OPAR expr SEMICOLON expr . SEMICOLON expr CPAR stmt
   49          | FOR OPAR expr SEMICOLON expr . SEMICOLON CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL      shift, and go to state 121
    DIFF       shift, and go to state 122
    GE         shift, and go to state 123
    LE         shift, and go to state 124
    AND        shift, and go to state 125
    OR         shift, and go to state 126
    SEMICOLON  shift, and go to state 194
    '<'        shift, and go to state 128
    '>'        shift, and go to state 129
    '+'        shift, and go to state 130
    '-'        shift, and go to state 131
    '*'        shift, and go to state 132
    '/'        shift, and go to state 133
    '%'        shift, and go to state 134


State 185

   45 iter_stmt: WHILE OPAR expr CPAR stmt .

    $default  reduce using rule 45 (iter_stmt)


State 186

   59 call_param: COMMA NAME . call_param

    COMMA  shift, and go to state 175

    $default  reduce using rule 60 (call_param)

    call_param  go to state 195


State 187

   44 select_stmt: IF OPAR expr CPAR stmt ELSE . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 196
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 188

   53 iter_stmt: FOR OPAR SEMICOLON SEMICOLON CPAR stmt .

    $default  reduce using rule 53 (iter_stmt)


State 189

   50 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 197
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 190

   52 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 198
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 191

   47 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr . CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 199
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 192

   51 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 200
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 193

   48 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr . CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 201
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 194

   46 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON . expr CPAR stmt
   49          | FOR OPAR expr SEMICOLON expr SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 65
    MINUS   shift, and go to state 66
    NOT     shift, and go to state 67
    SIZEOF  shift, and go to state 68
    INC     shift, and go to state 69
    DEC     shift, and go to state 70
    OPAR    shift, and go to state 72
    CPAR    shift, and go to state 202
    INT     shift, and go to state 77
    FLOAT   shift, and go to state 78
    CHAR    shift, and go to state 79
    NAME    shift, and go to state 100

    function_call  go to state 90
    expr           go to state 203
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 195

   59 call_param: COMMA NAME call_param .

    $default  reduce using rule 59 (call_param)


State 196

   44 select_stmt: IF OPAR expr CPAR stmt ELSE stmt .

    $default  reduce using rule 44 (select_stmt)


State 197

   50 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr CPAR stmt .

    $default  reduce using rule 50 (iter_stmt)


State 198

   52 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON CPAR stmt .

    $default  reduce using rule 52 (iter_stmt)


State 199

   47 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 204
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 200

   51 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON CPAR stmt .

    $default  reduce using rule 51 (iter_stmt)


State 201

   48 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 205
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 202

   49 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 206
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 203

   46 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr . CPAR stmt
   61 expr: expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '%' expr
   66     | expr . '>' expr
   67     | expr . '<' expr
   68     | expr . GE expr
   69     | expr . LE expr
   70     | expr . DIFF expr
   71     | expr . EQUAL expr
   72     | expr . OR expr
   73     | expr . AND expr

    EQUAL  shift, and go to state 121
    DIFF   shift, and go to state 122
    GE     shift, and go to state 123
    LE     shift, and go to state 124
    AND    shift, and go to state 125
    OR     shift, and go to state 126
    CPAR   shift, and go to state 207
    '<'    shift, and go to state 128
    '>'    shift, and go to state 129
    '+'    shift, and go to state 130
    '-'    shift, and go to state 131
    '*'    shift, and go to state 132
    '/'    shift, and go to state 133
    '%'    shift, and go to state 134


State 204

   47 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr CPAR stmt .

    $default  reduce using rule 47 (iter_stmt)


State 205

   48 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr CPAR stmt .

    $default  reduce using rule 48 (iter_stmt)


State 206

   49 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON CPAR stmt .

    $default  reduce using rule 49 (iter_stmt)


State 207

   46 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    NOT      shift, and go to state 67
    SIZEOF   shift, and go to state 68
    INC      shift, and go to state 69
    DEC      shift, and go to state 70
    OBRACES  shift, and go to state 71
    OPAR     shift, and go to state 72
    IF       shift, and go to state 73
    FOR      shift, and go to state 74
    WHILE    shift, and go to state 75
    RETURN   shift, and go to state 76
    INT      shift, and go to state 77
    FLOAT    shift, and go to state 78
    CHAR     shift, and go to state 79
    NAME     shift, and go to state 100

    stmt           go to state 208
    expr_stmt      go to state 85
    compound_stmt  go to state 86
    select_stmt    go to state 87
    iter_stmt      go to state 88
    return_stmt    go to state 89
    function_call  go to state 90
    expr           go to state 91
    var            go to state 92
    constant       go to state 93
    const_int      go to state 94
    const_float    go to state 95
    const_char     go to state 96


State 208

   46 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt .

    $default  reduce using rule 46 (iter_stmt)
