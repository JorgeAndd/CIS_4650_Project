Grammar

    0 $accept: program $end

    1 program: type_decl_list_start
    2        | type_decl_list_start var_decl_list function_def_list
    3        | type_decl_list_start var_decl_list
    4        | type_decl_list_start function_def_list

    5 type_name: TKINT
    6          | TKFLOAT
    7          | TKCHAR
    8          | NAME

    9 type_decl_list_start: type_decl_list
   10                     | %empty

   11 type_decl_list: type_decl ';'
   12               | type_decl_list type_decl ';'

   13 type_decl: TYPEDEF type_name NAME
   14          | TYPEDEF struct_decl

   15 struct_decl: STRUCT '{' var_decl_list_start '}' NAME

   16 var_decl_list_start: var_decl_list
   17                    | %empty

   18 var_decl_list: var_decl ';'
   19              | var_decl_list var_decl ';'

   20 var_decl: type_name id_list

   21 id_list: id_name
   22        | id_list ',' id_name

   23 id_name: NAME
   24        | NAME '[' INT ']'

   25 function_def_list: function_def
   26                  | function_def_list function_def

   27 function_def: type_name NAME '(' param_list_start ')' '{' func_body '}'
   28             | VOID NAME '(' param_list_start ')' '{' func_body '}'

   29 param_list_start: param_list
   30                 | %empty

   31 param_list: param_decl
   32           | param_list ',' param_decl

   33 param_decl: type_name id_name

   34 func_body: var_decl_list stmt_list
   35          | var_decl_list
   36          | stmt_list
   37          | %empty

   38 stmt_list: stmt
   39          | stmt_list stmt

   40 stmt: expr ';'
   41     | compound_stmt
   42     | if_stmt
   43     | iter_stmt
   44     | return_stmt

   45 compound_stmt: '{' stmt_list '}'
   46              | '{' '}'

   47 if_stmt: IF '(' expr ')' stmt
   48        | IF '(' expr ')' stmt ELSE stmt

   49 iter_stmt: WHILE '(' expr ')' stmt
   50          | FOR '(' iter_expr ';' iter_expr ';' iter_expr ')' stmt

   51 iter_expr: expr
   52          | %empty

   53 return_stmt: RETURN expr ';'
   54            | RETURN ';'

   55 function_call: NAME '(' call_param_list_start ')'

   56 call_param_list_start: call_param_list
   57                      | %empty

   58 call_param_list: expr
   59                | call_param_list ',' expr

   60 expr: expr '+' expr
   61     | expr '-' expr
   62     | expr '*' expr
   63     | expr '/' expr
   64     | expr '%' expr
   65     | expr '>' expr
   66     | expr '<' expr
   67     | expr GE expr
   68     | expr LE expr
   69     | expr DIFF expr
   70     | expr EQUAL expr
   71     | expr OR expr
   72     | expr AND expr
   73     | NOT expr
   74     | '-' expr
   75     | '+' expr
   76     | '(' expr ')'
   77     | function_call
   78     | var ASSIGN expr
   79     | var
   80     | expr INC
   81     | expr DEC
   82     | INC expr
   83     | DEC expr
   84     | SIZEOF '(' expr ')'
   85     | constant

   86 var: NAME
   87    | var '[' expr ']'
   88    | var '.' var

   89 constant: INT
   90         | FLOAT
   91         | CHAR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 64
'(' (40) 27 28 47 48 49 50 55 76 84
')' (41) 27 28 47 48 49 50 55 76 84
'*' (42) 62
'+' (43) 60 75
',' (44) 22 32 59
'-' (45) 61 74
'.' (46) 88
'/' (47) 63
';' (59) 11 12 18 19 40 50 53 54
'<' (60) 66
'>' (62) 65
'[' (91) 24 87
']' (93) 24 87
'{' (123) 15 27 28 45 46
'}' (125) 15 27 28 45 46
error (256)
FLOAT (258) 90
CHAR (259) 91
EQUAL (260) 70
DIFF (261) 69
GE (262) 67
LE (263) 68
AND (264) 72
OR (265) 71
NOT (266) 73
TYPEDEF (267) 13 14
ASSIGN (268) 78
SIZEOF (269) 84
TKINT (270) 5
TKFLOAT (271) 6
TKCHAR (272) 7
INC (273) 80 82
DEC (274) 81 83
IF (275) 47 48
ELSE (276) 48
FOR (277) 50
WHILE (278) 49
RETURN (279) 53 54
VOID (280) 28
STRUCT (281) 15
NAME (282) 8 13 15 23 24 27 28 55 86
INT (283) 24 89
THEN (284)
UNMINUS (285)
UNPLUS (286)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1 2 3 4, on right: 0
type_name (50)
    on left: 5 6 7 8, on right: 13 20 27 33
type_decl_list_start (51)
    on left: 9 10, on right: 1 2 3 4
type_decl_list (52)
    on left: 11 12, on right: 9 12
type_decl (53)
    on left: 13 14, on right: 11 12
struct_decl (54)
    on left: 15, on right: 14
var_decl_list_start (55)
    on left: 16 17, on right: 15
var_decl_list (56)
    on left: 18 19, on right: 2 3 16 19 34 35
var_decl (57)
    on left: 20, on right: 18 19
id_list (58)
    on left: 21 22, on right: 20 22
id_name (59)
    on left: 23 24, on right: 21 22 33
function_def_list (60)
    on left: 25 26, on right: 2 4 26
function_def (61)
    on left: 27 28, on right: 25 26
param_list_start (62)
    on left: 29 30, on right: 27 28
param_list (63)
    on left: 31 32, on right: 29 32
param_decl (64)
    on left: 33, on right: 31 32
func_body (65)
    on left: 34 35 36 37, on right: 27 28
stmt_list (66)
    on left: 38 39, on right: 34 36 39 45
stmt (67)
    on left: 40 41 42 43 44, on right: 38 39 47 48 49 50
compound_stmt (68)
    on left: 45 46, on right: 41
if_stmt (69)
    on left: 47 48, on right: 42
iter_stmt (70)
    on left: 49 50, on right: 43
iter_expr (71)
    on left: 51 52, on right: 50
return_stmt (72)
    on left: 53 54, on right: 44
function_call (73)
    on left: 55, on right: 77
call_param_list_start (74)
    on left: 56 57, on right: 55
call_param_list (75)
    on left: 58 59, on right: 56 59
expr (76)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78 79 80 81 82 83 84 85, on right: 40 47 48 49 51 53 58 59 60 61
    62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 78 80 81 82 83 84
    87
var (77)
    on left: 86 87 88, on right: 78 79 87 88
constant (78)
    on left: 89 90 91, on right: 85


State 0

    0 $accept: . program $end

    TYPEDEF  shift, and go to state 1

    $default  reduce using rule 10 (type_decl_list_start)

    program               go to state 2
    type_decl_list_start  go to state 3
    type_decl_list        go to state 4
    type_decl             go to state 5


State 1

   13 type_decl: TYPEDEF . type_name NAME
   14          | TYPEDEF . struct_decl

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    STRUCT   shift, and go to state 9
    NAME     shift, and go to state 10

    type_name    go to state 11
    struct_decl  go to state 12


State 2

    0 $accept: program . $end

    $end  shift, and go to state 13


State 3

    1 program: type_decl_list_start .
    2        | type_decl_list_start . var_decl_list function_def_list
    3        | type_decl_list_start . var_decl_list
    4        | type_decl_list_start . function_def_list

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    VOID     shift, and go to state 14
    NAME     shift, and go to state 10

    $default  reduce using rule 1 (program)

    type_name          go to state 15
    var_decl_list      go to state 16
    var_decl           go to state 17
    function_def_list  go to state 18
    function_def       go to state 19


State 4

    9 type_decl_list_start: type_decl_list .
   12 type_decl_list: type_decl_list . type_decl ';'

    TYPEDEF  shift, and go to state 1

    $default  reduce using rule 9 (type_decl_list_start)

    type_decl  go to state 20


State 5

   11 type_decl_list: type_decl . ';'

    ';'  shift, and go to state 21


State 6

    5 type_name: TKINT .

    $default  reduce using rule 5 (type_name)


State 7

    6 type_name: TKFLOAT .

    $default  reduce using rule 6 (type_name)


State 8

    7 type_name: TKCHAR .

    $default  reduce using rule 7 (type_name)


State 9

   15 struct_decl: STRUCT . '{' var_decl_list_start '}' NAME

    '{'  shift, and go to state 22


State 10

    8 type_name: NAME .

    $default  reduce using rule 8 (type_name)


State 11

   13 type_decl: TYPEDEF type_name . NAME

    NAME  shift, and go to state 23


State 12

   14 type_decl: TYPEDEF struct_decl .

    $default  reduce using rule 14 (type_decl)


State 13

    0 $accept: program $end .

    $default  accept


State 14

   28 function_def: VOID . NAME '(' param_list_start ')' '{' func_body '}'

    NAME  shift, and go to state 24


State 15

   20 var_decl: type_name . id_list
   27 function_def: type_name . NAME '(' param_list_start ')' '{' func_body '}'

    NAME  shift, and go to state 25

    id_list  go to state 26
    id_name  go to state 27


State 16

    2 program: type_decl_list_start var_decl_list . function_def_list
    3        | type_decl_list_start var_decl_list .
   19 var_decl_list: var_decl_list . var_decl ';'

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    VOID     shift, and go to state 14
    NAME     shift, and go to state 10

    $default  reduce using rule 3 (program)

    type_name          go to state 15
    var_decl           go to state 28
    function_def_list  go to state 29
    function_def       go to state 19


State 17

   18 var_decl_list: var_decl . ';'

    ';'  shift, and go to state 30


State 18

    4 program: type_decl_list_start function_def_list .
   26 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    VOID     shift, and go to state 14
    NAME     shift, and go to state 10

    $default  reduce using rule 4 (program)

    type_name     go to state 31
    function_def  go to state 32


State 19

   25 function_def_list: function_def .

    $default  reduce using rule 25 (function_def_list)


State 20

   12 type_decl_list: type_decl_list type_decl . ';'

    ';'  shift, and go to state 33


State 21

   11 type_decl_list: type_decl ';' .

    $default  reduce using rule 11 (type_decl_list)


State 22

   15 struct_decl: STRUCT '{' . var_decl_list_start '}' NAME

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    NAME     shift, and go to state 10

    $default  reduce using rule 17 (var_decl_list_start)

    type_name            go to state 34
    var_decl_list_start  go to state 35
    var_decl_list        go to state 36
    var_decl             go to state 17


State 23

   13 type_decl: TYPEDEF type_name NAME .

    $default  reduce using rule 13 (type_decl)


State 24

   28 function_def: VOID NAME . '(' param_list_start ')' '{' func_body '}'

    '('  shift, and go to state 37


State 25

   23 id_name: NAME .
   24        | NAME . '[' INT ']'
   27 function_def: type_name NAME . '(' param_list_start ')' '{' func_body '}'

    '('  shift, and go to state 38
    '['  shift, and go to state 39

    $default  reduce using rule 23 (id_name)


State 26

   20 var_decl: type_name id_list .
   22 id_list: id_list . ',' id_name

    ','  shift, and go to state 40

    $default  reduce using rule 20 (var_decl)


State 27

   21 id_list: id_name .

    $default  reduce using rule 21 (id_list)


State 28

   19 var_decl_list: var_decl_list var_decl . ';'

    ';'  shift, and go to state 41


State 29

    2 program: type_decl_list_start var_decl_list function_def_list .
   26 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    VOID     shift, and go to state 14
    NAME     shift, and go to state 10

    $default  reduce using rule 2 (program)

    type_name     go to state 31
    function_def  go to state 32


State 30

   18 var_decl_list: var_decl ';' .

    $default  reduce using rule 18 (var_decl_list)


State 31

   27 function_def: type_name . NAME '(' param_list_start ')' '{' func_body '}'

    NAME  shift, and go to state 42


State 32

   26 function_def_list: function_def_list function_def .

    $default  reduce using rule 26 (function_def_list)


State 33

   12 type_decl_list: type_decl_list type_decl ';' .

    $default  reduce using rule 12 (type_decl_list)


State 34

   20 var_decl: type_name . id_list

    NAME  shift, and go to state 43

    id_list  go to state 26
    id_name  go to state 27


State 35

   15 struct_decl: STRUCT '{' var_decl_list_start . '}' NAME

    '}'  shift, and go to state 44


State 36

   16 var_decl_list_start: var_decl_list .
   19 var_decl_list: var_decl_list . var_decl ';'

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    NAME     shift, and go to state 10

    $default  reduce using rule 16 (var_decl_list_start)

    type_name  go to state 34
    var_decl   go to state 28


State 37

   28 function_def: VOID NAME '(' . param_list_start ')' '{' func_body '}'

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    NAME     shift, and go to state 10

    $default  reduce using rule 30 (param_list_start)

    type_name         go to state 45
    param_list_start  go to state 46
    param_list        go to state 47
    param_decl        go to state 48


State 38

   27 function_def: type_name NAME '(' . param_list_start ')' '{' func_body '}'

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    NAME     shift, and go to state 10

    $default  reduce using rule 30 (param_list_start)

    type_name         go to state 45
    param_list_start  go to state 49
    param_list        go to state 47
    param_decl        go to state 48


State 39

   24 id_name: NAME '[' . INT ']'

    INT  shift, and go to state 50


State 40

   22 id_list: id_list ',' . id_name

    NAME  shift, and go to state 43

    id_name  go to state 51


State 41

   19 var_decl_list: var_decl_list var_decl ';' .

    $default  reduce using rule 19 (var_decl_list)


State 42

   27 function_def: type_name NAME . '(' param_list_start ')' '{' func_body '}'

    '('  shift, and go to state 38


State 43

   23 id_name: NAME .
   24        | NAME . '[' INT ']'

    '['  shift, and go to state 39

    $default  reduce using rule 23 (id_name)


State 44

   15 struct_decl: STRUCT '{' var_decl_list_start '}' . NAME

    NAME  shift, and go to state 52


State 45

   33 param_decl: type_name . id_name

    NAME  shift, and go to state 43

    id_name  go to state 53


State 46

   28 function_def: VOID NAME '(' param_list_start . ')' '{' func_body '}'

    ')'  shift, and go to state 54


State 47

   29 param_list_start: param_list .
   32 param_list: param_list . ',' param_decl

    ','  shift, and go to state 55

    $default  reduce using rule 29 (param_list_start)


State 48

   31 param_list: param_decl .

    $default  reduce using rule 31 (param_list)


State 49

   27 function_def: type_name NAME '(' param_list_start . ')' '{' func_body '}'

    ')'  shift, and go to state 56


State 50

   24 id_name: NAME '[' INT . ']'

    ']'  shift, and go to state 57


State 51

   22 id_list: id_list ',' id_name .

    $default  reduce using rule 22 (id_list)


State 52

   15 struct_decl: STRUCT '{' var_decl_list_start '}' NAME .

    $default  reduce using rule 15 (struct_decl)


State 53

   33 param_decl: type_name id_name .

    $default  reduce using rule 33 (param_decl)


State 54

   28 function_def: VOID NAME '(' param_list_start ')' . '{' func_body '}'

    '{'  shift, and go to state 58


State 55

   32 param_list: param_list ',' . param_decl

    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    NAME     shift, and go to state 10

    type_name   go to state 45
    param_decl  go to state 59


State 56

   27 function_def: type_name NAME '(' param_list_start ')' . '{' func_body '}'

    '{'  shift, and go to state 60


State 57

   24 id_name: NAME '[' INT ']' .

    $default  reduce using rule 24 (id_name)


State 58

   28 function_def: VOID NAME '(' param_list_start ')' '{' . func_body '}'

    FLOAT    shift, and go to state 61
    CHAR     shift, and go to state 62
    NOT      shift, and go to state 63
    SIZEOF   shift, and go to state 64
    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    INC      shift, and go to state 65
    DEC      shift, and go to state 66
    IF       shift, and go to state 67
    FOR      shift, and go to state 68
    WHILE    shift, and go to state 69
    RETURN   shift, and go to state 70
    NAME     shift, and go to state 71
    INT      shift, and go to state 72
    '('      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '{'      shift, and go to state 76

    $default  reduce using rule 37 (func_body)

    type_name      go to state 34
    var_decl_list  go to state 77
    var_decl       go to state 17
    func_body      go to state 78
    stmt_list      go to state 79
    stmt           go to state 80
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 59

   32 param_list: param_list ',' param_decl .

    $default  reduce using rule 32 (param_list)


State 60

   27 function_def: type_name NAME '(' param_list_start ')' '{' . func_body '}'

    FLOAT    shift, and go to state 61
    CHAR     shift, and go to state 62
    NOT      shift, and go to state 63
    SIZEOF   shift, and go to state 64
    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    INC      shift, and go to state 65
    DEC      shift, and go to state 66
    IF       shift, and go to state 67
    FOR      shift, and go to state 68
    WHILE    shift, and go to state 69
    RETURN   shift, and go to state 70
    NAME     shift, and go to state 71
    INT      shift, and go to state 72
    '('      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '{'      shift, and go to state 76

    $default  reduce using rule 37 (func_body)

    type_name      go to state 34
    var_decl_list  go to state 77
    var_decl       go to state 17
    func_body      go to state 89
    stmt_list      go to state 79
    stmt           go to state 80
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 61

   90 constant: FLOAT .

    $default  reduce using rule 90 (constant)


State 62

   91 constant: CHAR .

    $default  reduce using rule 91 (constant)


State 63

   73 expr: NOT . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 91
    var            go to state 87
    constant       go to state 88


State 64

   84 expr: SIZEOF . '(' expr ')'

    '('  shift, and go to state 92


State 65

   82 expr: INC . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 93
    var            go to state 87
    constant       go to state 88


State 66

   83 expr: DEC . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 94
    var            go to state 87
    constant       go to state 88


State 67

   47 if_stmt: IF . '(' expr ')' stmt
   48        | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 95


State 68

   50 iter_stmt: FOR . '(' iter_expr ';' iter_expr ';' iter_expr ')' stmt

    '('  shift, and go to state 96


State 69

   49 iter_stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 97


State 70

   53 return_stmt: RETURN . expr ';'
   54            | RETURN . ';'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    ';'     shift, and go to state 98

    function_call  go to state 85
    expr           go to state 99
    var            go to state 87
    constant       go to state 88


State 71

    8 type_name: NAME .
   55 function_call: NAME . '(' call_param_list_start ')'
   86 var: NAME .

    '('  shift, and go to state 100

    NAME      reduce using rule 8 (type_name)
    $default  reduce using rule 86 (var)


State 72

   89 constant: INT .

    $default  reduce using rule 89 (constant)


State 73

   76 expr: '(' . expr ')'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 101
    var            go to state 87
    constant       go to state 88


State 74

   75 expr: '+' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 102
    var            go to state 87
    constant       go to state 88


State 75

   74 expr: '-' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 103
    var            go to state 87
    constant       go to state 88


State 76

   45 compound_stmt: '{' . stmt_list '}'
   46              | '{' . '}'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76
    '}'     shift, and go to state 104

    stmt_list      go to state 105
    stmt           go to state 80
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 77

   19 var_decl_list: var_decl_list . var_decl ';'
   34 func_body: var_decl_list . stmt_list
   35          | var_decl_list .

    FLOAT    shift, and go to state 61
    CHAR     shift, and go to state 62
    NOT      shift, and go to state 63
    SIZEOF   shift, and go to state 64
    TKINT    shift, and go to state 6
    TKFLOAT  shift, and go to state 7
    TKCHAR   shift, and go to state 8
    INC      shift, and go to state 65
    DEC      shift, and go to state 66
    IF       shift, and go to state 67
    FOR      shift, and go to state 68
    WHILE    shift, and go to state 69
    RETURN   shift, and go to state 70
    NAME     shift, and go to state 71
    INT      shift, and go to state 72
    '('      shift, and go to state 73
    '+'      shift, and go to state 74
    '-'      shift, and go to state 75
    '{'      shift, and go to state 76

    $default  reduce using rule 35 (func_body)

    type_name      go to state 34
    var_decl       go to state 28
    stmt_list      go to state 106
    stmt           go to state 80
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 78

   28 function_def: VOID NAME '(' param_list_start ')' '{' func_body . '}'

    '}'  shift, and go to state 107


State 79

   36 func_body: stmt_list .
   39 stmt_list: stmt_list . stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    $default  reduce using rule 36 (func_body)

    stmt           go to state 108
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 80

   38 stmt_list: stmt .

    $default  reduce using rule 38 (stmt_list)


State 81

   41 stmt: compound_stmt .

    $default  reduce using rule 41 (stmt)


State 82

   42 stmt: if_stmt .

    $default  reduce using rule 42 (stmt)


State 83

   43 stmt: iter_stmt .

    $default  reduce using rule 43 (stmt)


State 84

   44 stmt: return_stmt .

    $default  reduce using rule 44 (stmt)


State 85

   77 expr: function_call .

    $default  reduce using rule 77 (expr)


State 86

   40 stmt: expr . ';'
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ';'    shift, and go to state 124


State 87

   78 expr: var . ASSIGN expr
   79     | var .
   87 var: var . '[' expr ']'
   88    | var . '.' var

    ASSIGN  shift, and go to state 125
    '.'     shift, and go to state 126
    '['     shift, and go to state 127

    $default  reduce using rule 79 (expr)


State 88

   85 expr: constant .

    $default  reduce using rule 85 (expr)


State 89

   27 function_def: type_name NAME '(' param_list_start ')' '{' func_body . '}'

    '}'  shift, and go to state 128


State 90

   55 function_call: NAME . '(' call_param_list_start ')'
   86 var: NAME .

    '('  shift, and go to state 100

    $default  reduce using rule 86 (var)


State 91

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   73     | NOT expr .
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 73 (expr)


State 92

   84 expr: SIZEOF '(' . expr ')'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 129
    var            go to state 87
    constant       go to state 88


State 93

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC
   82     | INC expr .

    $default  reduce using rule 82 (expr)


State 94

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC
   83     | DEC expr .

    $default  reduce using rule 83 (expr)


State 95

   47 if_stmt: IF '(' . expr ')' stmt
   48        | IF '(' . expr ')' stmt ELSE stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 130
    var            go to state 87
    constant       go to state 88


State 96

   50 iter_stmt: FOR '(' . iter_expr ';' iter_expr ';' iter_expr ')' stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    $default  reduce using rule 52 (iter_expr)

    iter_expr      go to state 131
    function_call  go to state 85
    expr           go to state 132
    var            go to state 87
    constant       go to state 88


State 97

   49 iter_stmt: WHILE '(' . expr ')' stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 133
    var            go to state 87
    constant       go to state 88


State 98

   54 return_stmt: RETURN ';' .

    $default  reduce using rule 54 (return_stmt)


State 99

   53 return_stmt: RETURN expr . ';'
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ';'    shift, and go to state 134


State 100

   55 function_call: NAME '(' . call_param_list_start ')'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    $default  reduce using rule 57 (call_param_list_start)

    function_call          go to state 85
    call_param_list_start  go to state 135
    call_param_list        go to state 136
    expr                   go to state 137
    var                    go to state 87
    constant               go to state 88


State 101

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   76     | '(' expr . ')'
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ')'    shift, and go to state 138


State 102

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   75     | '+' expr .
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 75 (expr)


State 103

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   74     | '-' expr .
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 74 (expr)


State 104

   46 compound_stmt: '{' '}' .

    $default  reduce using rule 46 (compound_stmt)


State 105

   39 stmt_list: stmt_list . stmt
   45 compound_stmt: '{' stmt_list . '}'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76
    '}'     shift, and go to state 139

    stmt           go to state 108
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 106

   34 func_body: var_decl_list stmt_list .
   39 stmt_list: stmt_list . stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    $default  reduce using rule 34 (func_body)

    stmt           go to state 108
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 107

   28 function_def: VOID NAME '(' param_list_start ')' '{' func_body '}' .

    $default  reduce using rule 28 (function_def)


State 108

   39 stmt_list: stmt_list stmt .

    $default  reduce using rule 39 (stmt_list)


State 109

   70 expr: expr EQUAL . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 140
    var            go to state 87
    constant       go to state 88


State 110

   69 expr: expr DIFF . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 141
    var            go to state 87
    constant       go to state 88


State 111

   67 expr: expr GE . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 142
    var            go to state 87
    constant       go to state 88


State 112

   68 expr: expr LE . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 143
    var            go to state 87
    constant       go to state 88


State 113

   72 expr: expr AND . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 144
    var            go to state 87
    constant       go to state 88


State 114

   71 expr: expr OR . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 145
    var            go to state 87
    constant       go to state 88


State 115

   80 expr: expr INC .

    $default  reduce using rule 80 (expr)


State 116

   81 expr: expr DEC .

    $default  reduce using rule 81 (expr)


State 117

   66 expr: expr '<' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 146
    var            go to state 87
    constant       go to state 88


State 118

   65 expr: expr '>' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 147
    var            go to state 87
    constant       go to state 88


State 119

   60 expr: expr '+' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 148
    var            go to state 87
    constant       go to state 88


State 120

   61 expr: expr '-' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 149
    var            go to state 87
    constant       go to state 88


State 121

   62 expr: expr '*' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 150
    var            go to state 87
    constant       go to state 88


State 122

   63 expr: expr '/' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 151
    var            go to state 87
    constant       go to state 88


State 123

   64 expr: expr '%' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 152
    var            go to state 87
    constant       go to state 88


State 124

   40 stmt: expr ';' .

    $default  reduce using rule 40 (stmt)


State 125

   78 expr: var ASSIGN . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 153
    var            go to state 87
    constant       go to state 88


State 126

   88 var: var '.' . var

    NAME  shift, and go to state 154

    var  go to state 155


State 127

   87 var: var '[' . expr ']'

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 156
    var            go to state 87
    constant       go to state 88


State 128

   27 function_def: type_name NAME '(' param_list_start ')' '{' func_body '}' .

    $default  reduce using rule 27 (function_def)


State 129

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC
   84     | SIZEOF '(' expr . ')'

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ')'    shift, and go to state 157


State 130

   47 if_stmt: IF '(' expr . ')' stmt
   48        | IF '(' expr . ')' stmt ELSE stmt
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ')'    shift, and go to state 158


State 131

   50 iter_stmt: FOR '(' iter_expr . ';' iter_expr ';' iter_expr ')' stmt

    ';'  shift, and go to state 159


State 132

   51 iter_expr: expr .
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 51 (iter_expr)


State 133

   49 iter_stmt: WHILE '(' expr . ')' stmt
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ')'    shift, and go to state 160


State 134

   53 return_stmt: RETURN expr ';' .

    $default  reduce using rule 53 (return_stmt)


State 135

   55 function_call: NAME '(' call_param_list_start . ')'

    ')'  shift, and go to state 161


State 136

   56 call_param_list_start: call_param_list .
   59 call_param_list: call_param_list . ',' expr

    ','  shift, and go to state 162

    $default  reduce using rule 56 (call_param_list_start)


State 137

   58 call_param_list: expr .
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 58 (call_param_list)


State 138

   76 expr: '(' expr ')' .

    $default  reduce using rule 76 (expr)


State 139

   45 compound_stmt: '{' stmt_list '}' .

    $default  reduce using rule 45 (compound_stmt)


State 140

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   70     | expr EQUAL expr .
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    GE   shift, and go to state 111
    LE   shift, and go to state 112
    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '<'  shift, and go to state 117
    '>'  shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 70 (expr)


State 141

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   69     | expr DIFF expr .
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    GE   shift, and go to state 111
    LE   shift, and go to state 112
    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '<'  shift, and go to state 117
    '>'  shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 69 (expr)


State 142

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   67     | expr GE expr .
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 67 (expr)


State 143

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   68     | expr LE expr .
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 68 (expr)


State 144

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   72     | expr AND expr .
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 72 (expr)


State 145

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   71     | expr OR expr .
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 71 (expr)


State 146

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   66     | expr '<' expr .
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 66 (expr)


State 147

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   65     | expr '>' expr .
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 65 (expr)


State 148

   60 expr: expr . '+' expr
   60     | expr '+' expr .
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 60 (expr)


State 149

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   61     | expr '-' expr .
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123

    $default  reduce using rule 61 (expr)


State 150

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   62     | expr '*' expr .
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 62 (expr)


State 151

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   63     | expr '/' expr .
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 63 (expr)


State 152

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   64     | expr '%' expr .
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 64 (expr)


State 153

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   78     | var ASSIGN expr .
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 78 (expr)


State 154

   86 var: NAME .

    $default  reduce using rule 86 (var)


State 155

   87 var: var . '[' expr ']'
   88    | var . '.' var
   88    | var '.' var .

    '['  shift, and go to state 127

    $default  reduce using rule 88 (var)


State 156

   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC
   87 var: var '[' expr . ']'

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123
    ']'    shift, and go to state 163


State 157

   84 expr: SIZEOF '(' expr ')' .

    $default  reduce using rule 84 (expr)


State 158

   47 if_stmt: IF '(' expr ')' . stmt
   48        | IF '(' expr ')' . stmt ELSE stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    stmt           go to state 164
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 159

   50 iter_stmt: FOR '(' iter_expr ';' . iter_expr ';' iter_expr ')' stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    $default  reduce using rule 52 (iter_expr)

    iter_expr      go to state 165
    function_call  go to state 85
    expr           go to state 132
    var            go to state 87
    constant       go to state 88


State 160

   49 iter_stmt: WHILE '(' expr ')' . stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    stmt           go to state 166
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 161

   55 function_call: NAME '(' call_param_list_start ')' .

    $default  reduce using rule 55 (function_call)


State 162

   59 call_param_list: call_param_list ',' . expr

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    function_call  go to state 85
    expr           go to state 167
    var            go to state 87
    constant       go to state 88


State 163

   87 var: var '[' expr ']' .

    $default  reduce using rule 87 (var)


State 164

   47 if_stmt: IF '(' expr ')' stmt .
   48        | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 168

    $default  reduce using rule 47 (if_stmt)


State 165

   50 iter_stmt: FOR '(' iter_expr ';' iter_expr . ';' iter_expr ')' stmt

    ';'  shift, and go to state 169


State 166

   49 iter_stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 49 (iter_stmt)


State 167

   59 call_param_list: call_param_list ',' expr .
   60 expr: expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '*' expr
   63     | expr . '/' expr
   64     | expr . '%' expr
   65     | expr . '>' expr
   66     | expr . '<' expr
   67     | expr . GE expr
   68     | expr . LE expr
   69     | expr . DIFF expr
   70     | expr . EQUAL expr
   71     | expr . OR expr
   72     | expr . AND expr
   80     | expr . INC
   81     | expr . DEC

    EQUAL  shift, and go to state 109
    DIFF   shift, and go to state 110
    GE     shift, and go to state 111
    LE     shift, and go to state 112
    AND    shift, and go to state 113
    OR     shift, and go to state 114
    INC    shift, and go to state 115
    DEC    shift, and go to state 116
    '<'    shift, and go to state 117
    '>'    shift, and go to state 118
    '+'    shift, and go to state 119
    '-'    shift, and go to state 120
    '*'    shift, and go to state 121
    '/'    shift, and go to state 122
    '%'    shift, and go to state 123

    $default  reduce using rule 59 (call_param_list)


State 168

   48 if_stmt: IF '(' expr ')' stmt ELSE . stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    stmt           go to state 170
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 169

   50 iter_stmt: FOR '(' iter_expr ';' iter_expr ';' . iter_expr ')' stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75

    $default  reduce using rule 52 (iter_expr)

    iter_expr      go to state 171
    function_call  go to state 85
    expr           go to state 132
    var            go to state 87
    constant       go to state 88


State 170

   48 if_stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 48 (if_stmt)


State 171

   50 iter_stmt: FOR '(' iter_expr ';' iter_expr ';' iter_expr . ')' stmt

    ')'  shift, and go to state 172


State 172

   50 iter_stmt: FOR '(' iter_expr ';' iter_expr ';' iter_expr ')' . stmt

    FLOAT   shift, and go to state 61
    CHAR    shift, and go to state 62
    NOT     shift, and go to state 63
    SIZEOF  shift, and go to state 64
    INC     shift, and go to state 65
    DEC     shift, and go to state 66
    IF      shift, and go to state 67
    FOR     shift, and go to state 68
    WHILE   shift, and go to state 69
    RETURN  shift, and go to state 70
    NAME    shift, and go to state 90
    INT     shift, and go to state 72
    '('     shift, and go to state 73
    '+'     shift, and go to state 74
    '-'     shift, and go to state 75
    '{'     shift, and go to state 76

    stmt           go to state 173
    compound_stmt  go to state 81
    if_stmt        go to state 82
    iter_stmt      go to state 83
    return_stmt    go to state 84
    function_call  go to state 85
    expr           go to state 86
    var            go to state 87
    constant       go to state 88


State 173

   50 iter_stmt: FOR '(' iter_expr ';' iter_expr ';' iter_expr ')' stmt .

    $default  reduce using rule 50 (iter_stmt)
