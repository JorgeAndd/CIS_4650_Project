Terminals unused in grammar

   QUOTE


Grammar

    0 $accept: program $end

    1 program: type_decl_list global_var_list function_def_list
    2        | global_var_list function_def_list
    3        | function_def_list
    4        | %empty

    5 type_decl_list: type_decl SEMICOLON
    6               | type_decl_list type_decl SEMICOLON

    7 type_name: TKINT
    8          | TKFLOAT
    9          | TKCHAR

   10 type_decl: TYPEDEF type_name NAME

   11 global_var_list: var_decl SEMICOLON
   12                | global_var_list var_decl SEMICOLON

   13 var_decl: type_name NAME

   14 function_def_list: function_def
   15                  | function_def_list function_def

   16 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body CBRACES
   17             | VOID NAME OPAR param_list CPAR OBRACES func_body CBRACES

   18 param_list: var_decl param_decl
   19           | %empty

   20 param_decl: COMMA var_decl param_decl
   21           | %empty

   22 func_body: var_decl_list stmt_list
   23          | stmt_list
   24          | %empty

   25 var_decl_list: var_decl SEMICOLON
   26              | var_decl_list var_decl SEMICOLON

   27 stmt_list: stmt
   28          | stmt_list stmt

   29 stmt: expr_stmt
   30     | compound_stmt
   31     | select_stmt
   32     | iter_stmt
   33     | return_stmt

   34 expr_stmt: expr SEMICOLON

   35 compound_stmt: OBRACES stmt_list CBRACES

   36 select_stmt: IF OPAR expr CPAR stmt
   37            | IF OPAR expr CPAR stmt ELSE stmt

   38 iter_stmt: WHILE OPAR expr CPAR stmt
   39          | FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt
   40          | FOR OPAR SEMICOLON expr SEMICOLON expr CPAR stmt
   41          | FOR OPAR expr SEMICOLON SEMICOLON expr CPAR stmt
   42          | FOR OPAR expr SEMICOLON expr SEMICOLON CPAR stmt
   43          | FOR OPAR SEMICOLON SEMICOLON expr CPAR stmt
   44          | FOR OPAR expr SEMICOLON SEMICOLON CPAR stmt
   45          | FOR OPAR SEMICOLON expr SEMICOLON CPAR stmt
   46          | FOR OPAR SEMICOLON SEMICOLON CPAR stmt

   47 return_stmt: RETURN expr SEMICOLON
   48            | RETURN SEMICOLON

   49 function_call: NAME OPAR call_param_list CPAR

   50 call_param_list: NAME call_param
   51                | %empty

   52 call_param: COMMA NAME call_param
   53           | %empty

   54 expr: expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr '%' expr
   59     | expr '>' expr
   60     | expr '<' expr
   61     | expr GE expr
   62     | expr LE expr
   63     | expr DIFF expr
   64     | expr EQUAL expr
   65     | expr OR expr
   66     | expr AND expr
   67     | NOT expr
   68     | MINUS expr
   69     | PLUS expr
   70     | OPAR expr CPAR
   71     | function_call
   72     | var ASSIGN expr
   73     | var
   74     | var INC
   75     | var DEC
   76     | INC var
   77     | DEC var
   78     | SIZEOF OPAR expr CPAR
   79     | SIZEOF OPAR type_name CPAR
   80     | constant

   81 var: NAME
   82    | NAME OBRACKET expr CBRACKET
   83    | NAME DOT var

   84 constant: const_int
   85         | const_float
   86         | const_char

   87 const_int: INT

   88 const_float: FLOAT

   89 const_char: CHAR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 58
'*' (42) 56
'+' (43) 54
'-' (45) 55
'/' (47) 57
'<' (60) 60
'>' (62) 59
error (256)
PLUS (258) 69
MINUS (259) 68
EQUAL (260) 64
DIFF (261) 63
GE (262) 61
LE (263) 62
AND (264) 66
OR (265) 65
NOT (266) 67
TYPEDEF (267) 10
ASSIGN (268) 72
SIZEOF (269) 78 79
TKINT (270) 7
TKFLOAT (271) 8
TKCHAR (272) 9
INC (273) 74 76
DEC (274) 75 77
DOT (275) 83
QUOTE (276)
SEMICOLON (277) 5 6 11 12 25 26 34 39 40 41 42 43 44 45 46 47 48
COMMA (278) 20 52
OBRACES (279) 16 17 35
CBRACES (280) 16 17 35
OPAR (281) 16 17 36 37 38 39 40 41 42 43 44 45 46 49 70 78 79
CPAR (282) 16 17 36 37 38 39 40 41 42 43 44 45 46 49 70 78 79
OBRACKET (283) 82
CBRACKET (284) 82
IF (285) 36 37
ELSE (286) 37
FOR (287) 39 40 41 42 43 44 45 46
WHILE (288) 38
RETURN (289) 47 48
VOID (290) 17
INT (291) 87
FLOAT (292) 88
CHAR (293) 89
NAME (294) 10 13 16 17 49 50 52 81 82 83
THEN (295)
UNMINUS (296)
UNPLUS (297)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1 2 3 4, on right: 0
type_decl_list (52)
    on left: 5 6, on right: 1 6
type_name (53)
    on left: 7 8 9, on right: 10 13 16 79
type_decl (54)
    on left: 10, on right: 5 6
global_var_list (55)
    on left: 11 12, on right: 1 2 12
var_decl (56)
    on left: 13, on right: 11 12 18 20 25 26
function_def_list (57)
    on left: 14 15, on right: 1 2 3 15
function_def (58)
    on left: 16 17, on right: 14 15
param_list (59)
    on left: 18 19, on right: 16 17
param_decl (60)
    on left: 20 21, on right: 18 20
func_body (61)
    on left: 22 23 24, on right: 16 17
var_decl_list (62)
    on left: 25 26, on right: 22 26
stmt_list (63)
    on left: 27 28, on right: 22 23 28 35
stmt (64)
    on left: 29 30 31 32 33, on right: 27 28 36 37 38 39 40 41 42 43
    44 45 46
expr_stmt (65)
    on left: 34, on right: 29
compound_stmt (66)
    on left: 35, on right: 30
select_stmt (67)
    on left: 36 37, on right: 31
iter_stmt (68)
    on left: 38 39 40 41 42 43 44 45 46, on right: 32
return_stmt (69)
    on left: 47 48, on right: 33
function_call (70)
    on left: 49, on right: 71
call_param_list (71)
    on left: 50 51, on right: 49
call_param (72)
    on left: 52 53, on right: 50 52
expr (73)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80, on right: 34 36 37 38 39 40 41 42 43
    44 45 47 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 72
    78 82
var (74)
    on left: 81 82 83, on right: 72 73 74 75 76 77 83
constant (75)
    on left: 84 85 86, on right: 80
const_int (76)
    on left: 87, on right: 84
const_float (77)
    on left: 88, on right: 85
const_char (78)
    on left: 89, on right: 86


State 0

    0 $accept: . program $end

    TYPEDEF  shift, and go to state 1
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 4 (program)

    program            go to state 6
    type_decl_list     go to state 7
    type_name          go to state 8
    type_decl          go to state 9
    global_var_list    go to state 10
    var_decl           go to state 11
    function_def_list  go to state 12
    function_def       go to state 13


State 1

   10 type_decl: TYPEDEF . type_name NAME

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4

    type_name  go to state 14


State 2

    7 type_name: TKINT .

    $default  reduce using rule 7 (type_name)


State 3

    8 type_name: TKFLOAT .

    $default  reduce using rule 8 (type_name)


State 4

    9 type_name: TKCHAR .

    $default  reduce using rule 9 (type_name)


State 5

   17 function_def: VOID . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 15


State 6

    0 $accept: program . $end

    $end  shift, and go to state 16


State 7

    1 program: type_decl_list . global_var_list function_def_list
    6 type_decl_list: type_decl_list . type_decl SEMICOLON

    TYPEDEF  shift, and go to state 1
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4

    type_name        go to state 17
    type_decl        go to state 18
    global_var_list  go to state 19
    var_decl         go to state 11


State 8

   13 var_decl: type_name . NAME
   16 function_def: type_name . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 20


State 9

    5 type_decl_list: type_decl . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 10

    2 program: global_var_list . function_def_list
   12 global_var_list: global_var_list . var_decl SEMICOLON

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    type_name          go to state 8
    var_decl           go to state 22
    function_def_list  go to state 23
    function_def       go to state 13


State 11

   11 global_var_list: var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 12

    3 program: function_def_list .
   15 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 3 (program)

    type_name     go to state 25
    function_def  go to state 26


State 13

   14 function_def_list: function_def .

    $default  reduce using rule 14 (function_def_list)


State 14

   10 type_decl: TYPEDEF type_name . NAME

    NAME  shift, and go to state 27


State 15

   17 function_def: VOID NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR  shift, and go to state 28


State 16

    0 $accept: program $end .

    $default  accept


State 17

   13 var_decl: type_name . NAME

    NAME  shift, and go to state 29


State 18

    6 type_decl_list: type_decl_list type_decl . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 19

    1 program: type_decl_list global_var_list . function_def_list
   12 global_var_list: global_var_list . var_decl SEMICOLON

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    type_name          go to state 8
    var_decl           go to state 22
    function_def_list  go to state 31
    function_def       go to state 13


State 20

   13 var_decl: type_name NAME .
   16 function_def: type_name NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR  shift, and go to state 32

    $default  reduce using rule 13 (var_decl)


State 21

    5 type_decl_list: type_decl SEMICOLON .

    $default  reduce using rule 5 (type_decl_list)


State 22

   12 global_var_list: global_var_list var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 23

    2 program: global_var_list function_def_list .
   15 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 2 (program)

    type_name     go to state 25
    function_def  go to state 26


State 24

   11 global_var_list: var_decl SEMICOLON .

    $default  reduce using rule 11 (global_var_list)


State 25

   16 function_def: type_name . NAME OPAR param_list CPAR OBRACES func_body CBRACES

    NAME  shift, and go to state 34


State 26

   15 function_def_list: function_def_list function_def .

    $default  reduce using rule 15 (function_def_list)


State 27

   10 type_decl: TYPEDEF type_name NAME .

    $default  reduce using rule 10 (type_decl)


State 28

   17 function_def: VOID NAME OPAR . param_list CPAR OBRACES func_body CBRACES

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4

    $default  reduce using rule 19 (param_list)

    type_name   go to state 17
    var_decl    go to state 35
    param_list  go to state 36


State 29

   13 var_decl: type_name NAME .

    $default  reduce using rule 13 (var_decl)


State 30

    6 type_decl_list: type_decl_list type_decl SEMICOLON .

    $default  reduce using rule 6 (type_decl_list)


State 31

    1 program: type_decl_list global_var_list function_def_list .
   15 function_def_list: function_def_list . function_def

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    VOID     shift, and go to state 5

    $default  reduce using rule 1 (program)

    type_name     go to state 25
    function_def  go to state 26


State 32

   16 function_def: type_name NAME OPAR . param_list CPAR OBRACES func_body CBRACES

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4

    $default  reduce using rule 19 (param_list)

    type_name   go to state 17
    var_decl    go to state 35
    param_list  go to state 37


State 33

   12 global_var_list: global_var_list var_decl SEMICOLON .

    $default  reduce using rule 12 (global_var_list)


State 34

   16 function_def: type_name NAME . OPAR param_list CPAR OBRACES func_body CBRACES

    OPAR  shift, and go to state 32


State 35

   18 param_list: var_decl . param_decl

    COMMA  shift, and go to state 38

    $default  reduce using rule 21 (param_decl)

    param_decl  go to state 39


State 36

   17 function_def: VOID NAME OPAR param_list . CPAR OBRACES func_body CBRACES

    CPAR  shift, and go to state 40


State 37

   16 function_def: type_name NAME OPAR param_list . CPAR OBRACES func_body CBRACES

    CPAR  shift, and go to state 41


State 38

   20 param_decl: COMMA . var_decl param_decl

    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4

    type_name  go to state 17
    var_decl   go to state 42


State 39

   18 param_list: var_decl param_decl .

    $default  reduce using rule 18 (param_list)


State 40

   17 function_def: VOID NAME OPAR param_list CPAR . OBRACES func_body CBRACES

    OBRACES  shift, and go to state 43


State 41

   16 function_def: type_name NAME OPAR param_list CPAR . OBRACES func_body CBRACES

    OBRACES  shift, and go to state 44


State 42

   20 param_decl: COMMA var_decl . param_decl

    COMMA  shift, and go to state 38

    $default  reduce using rule 21 (param_decl)

    param_decl  go to state 45


State 43

   17 function_def: VOID NAME OPAR param_list CPAR OBRACES . func_body CBRACES

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    $default  reduce using rule 24 (func_body)

    type_name      go to state 17
    var_decl       go to state 62
    func_body      go to state 63
    var_decl_list  go to state 64
    stmt_list      go to state 65
    stmt           go to state 66
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 44

   16 function_def: type_name NAME OPAR param_list CPAR OBRACES . func_body CBRACES

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    $default  reduce using rule 24 (func_body)

    type_name      go to state 17
    var_decl       go to state 62
    func_body      go to state 79
    var_decl_list  go to state 64
    stmt_list      go to state 65
    stmt           go to state 66
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 45

   20 param_decl: COMMA var_decl param_decl .

    $default  reduce using rule 20 (param_decl)


State 46

   69 expr: PLUS . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 80
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 47

   68 expr: MINUS . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 81
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 48

   67 expr: NOT . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 82
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 49

   78 expr: SIZEOF . OPAR expr CPAR
   79     | SIZEOF . OPAR type_name CPAR

    OPAR  shift, and go to state 83


State 50

   76 expr: INC . var

    NAME  shift, and go to state 84

    var  go to state 85


State 51

   77 expr: DEC . var

    NAME  shift, and go to state 84

    var  go to state 86


State 52

   35 compound_stmt: OBRACES . stmt_list CBRACES

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt_list      go to state 87
    stmt           go to state 66
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 53

   70 expr: OPAR . expr CPAR

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 88
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 54

   36 select_stmt: IF . OPAR expr CPAR stmt
   37            | IF . OPAR expr CPAR stmt ELSE stmt

    OPAR  shift, and go to state 89


State 55

   39 iter_stmt: FOR . OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt
   40          | FOR . OPAR SEMICOLON expr SEMICOLON expr CPAR stmt
   41          | FOR . OPAR expr SEMICOLON SEMICOLON expr CPAR stmt
   42          | FOR . OPAR expr SEMICOLON expr SEMICOLON CPAR stmt
   43          | FOR . OPAR SEMICOLON SEMICOLON expr CPAR stmt
   44          | FOR . OPAR expr SEMICOLON SEMICOLON CPAR stmt
   45          | FOR . OPAR SEMICOLON expr SEMICOLON CPAR stmt
   46          | FOR . OPAR SEMICOLON SEMICOLON CPAR stmt

    OPAR  shift, and go to state 90


State 56

   38 iter_stmt: WHILE . OPAR expr CPAR stmt

    OPAR  shift, and go to state 91


State 57

   47 return_stmt: RETURN . expr SEMICOLON
   48            | RETURN . SEMICOLON

    PLUS       shift, and go to state 46
    MINUS      shift, and go to state 47
    NOT        shift, and go to state 48
    SIZEOF     shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    SEMICOLON  shift, and go to state 92
    OPAR       shift, and go to state 53
    INT        shift, and go to state 58
    FLOAT      shift, and go to state 59
    CHAR       shift, and go to state 60
    NAME       shift, and go to state 61

    function_call  go to state 72
    expr           go to state 93
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 58

   87 const_int: INT .

    $default  reduce using rule 87 (const_int)


State 59

   88 const_float: FLOAT .

    $default  reduce using rule 88 (const_float)


State 60

   89 const_char: CHAR .

    $default  reduce using rule 89 (const_char)


State 61

   49 function_call: NAME . OPAR call_param_list CPAR
   81 var: NAME .
   82    | NAME . OBRACKET expr CBRACKET
   83    | NAME . DOT var

    DOT       shift, and go to state 94
    OPAR      shift, and go to state 95
    OBRACKET  shift, and go to state 96

    $default  reduce using rule 81 (var)


State 62

   25 var_decl_list: var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 97


State 63

   17 function_def: VOID NAME OPAR param_list CPAR OBRACES func_body . CBRACES

    CBRACES  shift, and go to state 98


State 64

   22 func_body: var_decl_list . stmt_list
   26 var_decl_list: var_decl_list . var_decl SEMICOLON

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    type_name      go to state 17
    var_decl       go to state 99
    stmt_list      go to state 100
    stmt           go to state 66
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 65

   23 func_body: stmt_list .
   28 stmt_list: stmt_list . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    $default  reduce using rule 23 (func_body)

    stmt           go to state 101
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 66

   27 stmt_list: stmt .

    $default  reduce using rule 27 (stmt_list)


State 67

   29 stmt: expr_stmt .

    $default  reduce using rule 29 (stmt)


State 68

   30 stmt: compound_stmt .

    $default  reduce using rule 30 (stmt)


State 69

   31 stmt: select_stmt .

    $default  reduce using rule 31 (stmt)


State 70

   32 stmt: iter_stmt .

    $default  reduce using rule 32 (stmt)


State 71

   33 stmt: return_stmt .

    $default  reduce using rule 33 (stmt)


State 72

   71 expr: function_call .

    $default  reduce using rule 71 (expr)


State 73

   34 expr_stmt: expr . SEMICOLON
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL      shift, and go to state 102
    DIFF       shift, and go to state 103
    GE         shift, and go to state 104
    LE         shift, and go to state 105
    AND        shift, and go to state 106
    OR         shift, and go to state 107
    SEMICOLON  shift, and go to state 108
    '<'        shift, and go to state 109
    '>'        shift, and go to state 110
    '+'        shift, and go to state 111
    '-'        shift, and go to state 112
    '*'        shift, and go to state 113
    '/'        shift, and go to state 114
    '%'        shift, and go to state 115


State 74

   72 expr: var . ASSIGN expr
   73     | var .
   74     | var . INC
   75     | var . DEC

    ASSIGN  shift, and go to state 116
    INC     shift, and go to state 117
    DEC     shift, and go to state 118

    $default  reduce using rule 73 (expr)


State 75

   80 expr: constant .

    $default  reduce using rule 80 (expr)


State 76

   84 constant: const_int .

    $default  reduce using rule 84 (constant)


State 77

   85 constant: const_float .

    $default  reduce using rule 85 (constant)


State 78

   86 constant: const_char .

    $default  reduce using rule 86 (constant)


State 79

   16 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body . CBRACES

    CBRACES  shift, and go to state 119


State 80

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   69     | PLUS expr .

    $default  reduce using rule 69 (expr)


State 81

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   68     | MINUS expr .

    $default  reduce using rule 68 (expr)


State 82

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   67     | NOT expr .

    $default  reduce using rule 67 (expr)


State 83

   78 expr: SIZEOF OPAR . expr CPAR
   79     | SIZEOF OPAR . type_name CPAR

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    TKINT    shift, and go to state 2
    TKFLOAT  shift, and go to state 3
    TKCHAR   shift, and go to state 4
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OPAR     shift, and go to state 53
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    type_name      go to state 120
    function_call  go to state 72
    expr           go to state 121
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 84

   81 var: NAME .
   82    | NAME . OBRACKET expr CBRACKET
   83    | NAME . DOT var

    DOT       shift, and go to state 94
    OBRACKET  shift, and go to state 96

    $default  reduce using rule 81 (var)


State 85

   76 expr: INC var .

    $default  reduce using rule 76 (expr)


State 86

   77 expr: DEC var .

    $default  reduce using rule 77 (expr)


State 87

   28 stmt_list: stmt_list . stmt
   35 compound_stmt: OBRACES stmt_list . CBRACES

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    CBRACES  shift, and go to state 122
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 101
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 88

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   70     | OPAR expr . CPAR

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 123
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 89

   36 select_stmt: IF OPAR . expr CPAR stmt
   37            | IF OPAR . expr CPAR stmt ELSE stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 124
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 90

   39 iter_stmt: FOR OPAR . expr SEMICOLON expr SEMICOLON expr CPAR stmt
   40          | FOR OPAR . SEMICOLON expr SEMICOLON expr CPAR stmt
   41          | FOR OPAR . expr SEMICOLON SEMICOLON expr CPAR stmt
   42          | FOR OPAR . expr SEMICOLON expr SEMICOLON CPAR stmt
   43          | FOR OPAR . SEMICOLON SEMICOLON expr CPAR stmt
   44          | FOR OPAR . expr SEMICOLON SEMICOLON CPAR stmt
   45          | FOR OPAR . SEMICOLON expr SEMICOLON CPAR stmt
   46          | FOR OPAR . SEMICOLON SEMICOLON CPAR stmt

    PLUS       shift, and go to state 46
    MINUS      shift, and go to state 47
    NOT        shift, and go to state 48
    SIZEOF     shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    SEMICOLON  shift, and go to state 125
    OPAR       shift, and go to state 53
    INT        shift, and go to state 58
    FLOAT      shift, and go to state 59
    CHAR       shift, and go to state 60
    NAME       shift, and go to state 61

    function_call  go to state 72
    expr           go to state 126
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 91

   38 iter_stmt: WHILE OPAR . expr CPAR stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 127
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 92

   48 return_stmt: RETURN SEMICOLON .

    $default  reduce using rule 48 (return_stmt)


State 93

   47 return_stmt: RETURN expr . SEMICOLON
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL      shift, and go to state 102
    DIFF       shift, and go to state 103
    GE         shift, and go to state 104
    LE         shift, and go to state 105
    AND        shift, and go to state 106
    OR         shift, and go to state 107
    SEMICOLON  shift, and go to state 128
    '<'        shift, and go to state 109
    '>'        shift, and go to state 110
    '+'        shift, and go to state 111
    '-'        shift, and go to state 112
    '*'        shift, and go to state 113
    '/'        shift, and go to state 114
    '%'        shift, and go to state 115


State 94

   83 var: NAME DOT . var

    NAME  shift, and go to state 84

    var  go to state 129


State 95

   49 function_call: NAME OPAR . call_param_list CPAR

    NAME  shift, and go to state 130

    $default  reduce using rule 51 (call_param_list)

    call_param_list  go to state 131


State 96

   82 var: NAME OBRACKET . expr CBRACKET

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 132
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 97

   25 var_decl_list: var_decl SEMICOLON .

    $default  reduce using rule 25 (var_decl_list)


State 98

   17 function_def: VOID NAME OPAR param_list CPAR OBRACES func_body CBRACES .

    $default  reduce using rule 17 (function_def)


State 99

   26 var_decl_list: var_decl_list var_decl . SEMICOLON

    SEMICOLON  shift, and go to state 133


State 100

   22 func_body: var_decl_list stmt_list .
   28 stmt_list: stmt_list . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    $default  reduce using rule 22 (func_body)

    stmt           go to state 101
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 101

   28 stmt_list: stmt_list stmt .

    $default  reduce using rule 28 (stmt_list)


State 102

   64 expr: expr EQUAL . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 134
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 103

   63 expr: expr DIFF . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 135
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 104

   61 expr: expr GE . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 136
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 105

   62 expr: expr LE . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 137
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 106

   66 expr: expr AND . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 138
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 107

   65 expr: expr OR . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 139
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 108

   34 expr_stmt: expr SEMICOLON .

    $default  reduce using rule 34 (expr_stmt)


State 109

   60 expr: expr '<' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 140
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 110

   59 expr: expr '>' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 141
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 111

   54 expr: expr '+' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 142
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 112

   55 expr: expr '-' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 143
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 113

   56 expr: expr '*' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 144
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 114

   57 expr: expr '/' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 145
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 115

   58 expr: expr '%' . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 146
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 116

   72 expr: var ASSIGN . expr

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 147
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 117

   74 expr: var INC .

    $default  reduce using rule 74 (expr)


State 118

   75 expr: var DEC .

    $default  reduce using rule 75 (expr)


State 119

   16 function_def: type_name NAME OPAR param_list CPAR OBRACES func_body CBRACES .

    $default  reduce using rule 16 (function_def)


State 120

   79 expr: SIZEOF OPAR type_name . CPAR

    CPAR  shift, and go to state 148


State 121

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   78     | SIZEOF OPAR expr . CPAR

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 149
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 122

   35 compound_stmt: OBRACES stmt_list CBRACES .

    $default  reduce using rule 35 (compound_stmt)


State 123

   70 expr: OPAR expr CPAR .

    $default  reduce using rule 70 (expr)


State 124

   36 select_stmt: IF OPAR expr . CPAR stmt
   37            | IF OPAR expr . CPAR stmt ELSE stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 150
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 125

   40 iter_stmt: FOR OPAR SEMICOLON . expr SEMICOLON expr CPAR stmt
   43          | FOR OPAR SEMICOLON . SEMICOLON expr CPAR stmt
   45          | FOR OPAR SEMICOLON . expr SEMICOLON CPAR stmt
   46          | FOR OPAR SEMICOLON . SEMICOLON CPAR stmt

    PLUS       shift, and go to state 46
    MINUS      shift, and go to state 47
    NOT        shift, and go to state 48
    SIZEOF     shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    SEMICOLON  shift, and go to state 151
    OPAR       shift, and go to state 53
    INT        shift, and go to state 58
    FLOAT      shift, and go to state 59
    CHAR       shift, and go to state 60
    NAME       shift, and go to state 61

    function_call  go to state 72
    expr           go to state 152
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 126

   39 iter_stmt: FOR OPAR expr . SEMICOLON expr SEMICOLON expr CPAR stmt
   41          | FOR OPAR expr . SEMICOLON SEMICOLON expr CPAR stmt
   42          | FOR OPAR expr . SEMICOLON expr SEMICOLON CPAR stmt
   44          | FOR OPAR expr . SEMICOLON SEMICOLON CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL      shift, and go to state 102
    DIFF       shift, and go to state 103
    GE         shift, and go to state 104
    LE         shift, and go to state 105
    AND        shift, and go to state 106
    OR         shift, and go to state 107
    SEMICOLON  shift, and go to state 153
    '<'        shift, and go to state 109
    '>'        shift, and go to state 110
    '+'        shift, and go to state 111
    '-'        shift, and go to state 112
    '*'        shift, and go to state 113
    '/'        shift, and go to state 114
    '%'        shift, and go to state 115


State 127

   38 iter_stmt: WHILE OPAR expr . CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 154
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 128

   47 return_stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 47 (return_stmt)


State 129

   83 var: NAME DOT var .

    $default  reduce using rule 83 (var)


State 130

   50 call_param_list: NAME . call_param

    COMMA  shift, and go to state 155

    $default  reduce using rule 53 (call_param)

    call_param  go to state 156


State 131

   49 function_call: NAME OPAR call_param_list . CPAR

    CPAR  shift, and go to state 157


State 132

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   82 var: NAME OBRACKET expr . CBRACKET

    EQUAL     shift, and go to state 102
    DIFF      shift, and go to state 103
    GE        shift, and go to state 104
    LE        shift, and go to state 105
    AND       shift, and go to state 106
    OR        shift, and go to state 107
    CBRACKET  shift, and go to state 158
    '<'       shift, and go to state 109
    '>'       shift, and go to state 110
    '+'       shift, and go to state 111
    '-'       shift, and go to state 112
    '*'       shift, and go to state 113
    '/'       shift, and go to state 114
    '%'       shift, and go to state 115


State 133

   26 var_decl_list: var_decl_list var_decl SEMICOLON .

    $default  reduce using rule 26 (var_decl_list)


State 134

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   64     | expr EQUAL expr .
   65     | expr . OR expr
   66     | expr . AND expr

    GE   shift, and go to state 104
    LE   shift, and go to state 105
    '<'  shift, and go to state 109
    '>'  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 64 (expr)


State 135

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   63     | expr DIFF expr .
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    GE   shift, and go to state 104
    LE   shift, and go to state 105
    '<'  shift, and go to state 109
    '>'  shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 63 (expr)


State 136

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   61     | expr GE expr .
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 61 (expr)


State 137

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   62     | expr LE expr .
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 62 (expr)


State 138

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   66     | expr AND expr .

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115

    $default  reduce using rule 66 (expr)


State 139

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   65     | expr OR expr .
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115

    $default  reduce using rule 65 (expr)


State 140

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   60     | expr '<' expr .
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 60 (expr)


State 141

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   59     | expr '>' expr .
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 59 (expr)


State 142

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 54 (expr)


State 143

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115

    $default  reduce using rule 55 (expr)


State 144

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    $default  reduce using rule 56 (expr)


State 145

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    $default  reduce using rule 57 (expr)


State 146

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   58     | expr '%' expr .
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    $default  reduce using rule 58 (expr)


State 147

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr
   72     | var ASSIGN expr .

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115

    $default  reduce using rule 72 (expr)


State 148

   79 expr: SIZEOF OPAR type_name CPAR .

    $default  reduce using rule 79 (expr)


State 149

   78 expr: SIZEOF OPAR expr CPAR .

    $default  reduce using rule 78 (expr)


State 150

   36 select_stmt: IF OPAR expr CPAR . stmt
   37            | IF OPAR expr CPAR . stmt ELSE stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 159
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 151

   43 iter_stmt: FOR OPAR SEMICOLON SEMICOLON . expr CPAR stmt
   46          | FOR OPAR SEMICOLON SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    CPAR    shift, and go to state 160
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 161
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 152

   40 iter_stmt: FOR OPAR SEMICOLON expr . SEMICOLON expr CPAR stmt
   45          | FOR OPAR SEMICOLON expr . SEMICOLON CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL      shift, and go to state 102
    DIFF       shift, and go to state 103
    GE         shift, and go to state 104
    LE         shift, and go to state 105
    AND        shift, and go to state 106
    OR         shift, and go to state 107
    SEMICOLON  shift, and go to state 162
    '<'        shift, and go to state 109
    '>'        shift, and go to state 110
    '+'        shift, and go to state 111
    '-'        shift, and go to state 112
    '*'        shift, and go to state 113
    '/'        shift, and go to state 114
    '%'        shift, and go to state 115


State 153

   39 iter_stmt: FOR OPAR expr SEMICOLON . expr SEMICOLON expr CPAR stmt
   41          | FOR OPAR expr SEMICOLON . SEMICOLON expr CPAR stmt
   42          | FOR OPAR expr SEMICOLON . expr SEMICOLON CPAR stmt
   44          | FOR OPAR expr SEMICOLON . SEMICOLON CPAR stmt

    PLUS       shift, and go to state 46
    MINUS      shift, and go to state 47
    NOT        shift, and go to state 48
    SIZEOF     shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    SEMICOLON  shift, and go to state 163
    OPAR       shift, and go to state 53
    INT        shift, and go to state 58
    FLOAT      shift, and go to state 59
    CHAR       shift, and go to state 60
    NAME       shift, and go to state 61

    function_call  go to state 72
    expr           go to state 164
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 154

   38 iter_stmt: WHILE OPAR expr CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 165
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 155

   52 call_param: COMMA . NAME call_param

    NAME  shift, and go to state 166


State 156

   50 call_param_list: NAME call_param .

    $default  reduce using rule 50 (call_param_list)


State 157

   49 function_call: NAME OPAR call_param_list CPAR .

    $default  reduce using rule 49 (function_call)


State 158

   82 var: NAME OBRACKET expr CBRACKET .

    $default  reduce using rule 82 (var)


State 159

   36 select_stmt: IF OPAR expr CPAR stmt .
   37            | IF OPAR expr CPAR stmt . ELSE stmt

    ELSE  shift, and go to state 167

    $default  reduce using rule 36 (select_stmt)


State 160

   46 iter_stmt: FOR OPAR SEMICOLON SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 168
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 161

   43 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr . CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 169
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 162

   40 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON . expr CPAR stmt
   45          | FOR OPAR SEMICOLON expr SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    CPAR    shift, and go to state 170
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 171
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 163

   41 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON . expr CPAR stmt
   44          | FOR OPAR expr SEMICOLON SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    CPAR    shift, and go to state 172
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 173
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 164

   39 iter_stmt: FOR OPAR expr SEMICOLON expr . SEMICOLON expr CPAR stmt
   42          | FOR OPAR expr SEMICOLON expr . SEMICOLON CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL      shift, and go to state 102
    DIFF       shift, and go to state 103
    GE         shift, and go to state 104
    LE         shift, and go to state 105
    AND        shift, and go to state 106
    OR         shift, and go to state 107
    SEMICOLON  shift, and go to state 174
    '<'        shift, and go to state 109
    '>'        shift, and go to state 110
    '+'        shift, and go to state 111
    '-'        shift, and go to state 112
    '*'        shift, and go to state 113
    '/'        shift, and go to state 114
    '%'        shift, and go to state 115


State 165

   38 iter_stmt: WHILE OPAR expr CPAR stmt .

    $default  reduce using rule 38 (iter_stmt)


State 166

   52 call_param: COMMA NAME . call_param

    COMMA  shift, and go to state 155

    $default  reduce using rule 53 (call_param)

    call_param  go to state 175


State 167

   37 select_stmt: IF OPAR expr CPAR stmt ELSE . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 176
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 168

   46 iter_stmt: FOR OPAR SEMICOLON SEMICOLON CPAR stmt .

    $default  reduce using rule 46 (iter_stmt)


State 169

   43 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 177
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 170

   45 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 178
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 171

   40 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr . CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 179
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 172

   44 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 180
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 173

   41 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr . CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 181
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 174

   39 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON . expr CPAR stmt
   42          | FOR OPAR expr SEMICOLON expr SEMICOLON . CPAR stmt

    PLUS    shift, and go to state 46
    MINUS   shift, and go to state 47
    NOT     shift, and go to state 48
    SIZEOF  shift, and go to state 49
    INC     shift, and go to state 50
    DEC     shift, and go to state 51
    OPAR    shift, and go to state 53
    CPAR    shift, and go to state 182
    INT     shift, and go to state 58
    FLOAT   shift, and go to state 59
    CHAR    shift, and go to state 60
    NAME    shift, and go to state 61

    function_call  go to state 72
    expr           go to state 183
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 175

   52 call_param: COMMA NAME call_param .

    $default  reduce using rule 52 (call_param)


State 176

   37 select_stmt: IF OPAR expr CPAR stmt ELSE stmt .

    $default  reduce using rule 37 (select_stmt)


State 177

   43 iter_stmt: FOR OPAR SEMICOLON SEMICOLON expr CPAR stmt .

    $default  reduce using rule 43 (iter_stmt)


State 178

   45 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON CPAR stmt .

    $default  reduce using rule 45 (iter_stmt)


State 179

   40 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 184
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 180

   44 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON CPAR stmt .

    $default  reduce using rule 44 (iter_stmt)


State 181

   41 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 185
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 182

   42 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 186
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 183

   39 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr . CPAR stmt
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . '%' expr
   59     | expr . '>' expr
   60     | expr . '<' expr
   61     | expr . GE expr
   62     | expr . LE expr
   63     | expr . DIFF expr
   64     | expr . EQUAL expr
   65     | expr . OR expr
   66     | expr . AND expr

    EQUAL  shift, and go to state 102
    DIFF   shift, and go to state 103
    GE     shift, and go to state 104
    LE     shift, and go to state 105
    AND    shift, and go to state 106
    OR     shift, and go to state 107
    CPAR   shift, and go to state 187
    '<'    shift, and go to state 109
    '>'    shift, and go to state 110
    '+'    shift, and go to state 111
    '-'    shift, and go to state 112
    '*'    shift, and go to state 113
    '/'    shift, and go to state 114
    '%'    shift, and go to state 115


State 184

   40 iter_stmt: FOR OPAR SEMICOLON expr SEMICOLON expr CPAR stmt .

    $default  reduce using rule 40 (iter_stmt)


State 185

   41 iter_stmt: FOR OPAR expr SEMICOLON SEMICOLON expr CPAR stmt .

    $default  reduce using rule 41 (iter_stmt)


State 186

   42 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON CPAR stmt .

    $default  reduce using rule 42 (iter_stmt)


State 187

   39 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR . stmt

    PLUS     shift, and go to state 46
    MINUS    shift, and go to state 47
    NOT      shift, and go to state 48
    SIZEOF   shift, and go to state 49
    INC      shift, and go to state 50
    DEC      shift, and go to state 51
    OBRACES  shift, and go to state 52
    OPAR     shift, and go to state 53
    IF       shift, and go to state 54
    FOR      shift, and go to state 55
    WHILE    shift, and go to state 56
    RETURN   shift, and go to state 57
    INT      shift, and go to state 58
    FLOAT    shift, and go to state 59
    CHAR     shift, and go to state 60
    NAME     shift, and go to state 61

    stmt           go to state 188
    expr_stmt      go to state 67
    compound_stmt  go to state 68
    select_stmt    go to state 69
    iter_stmt      go to state 70
    return_stmt    go to state 71
    function_call  go to state 72
    expr           go to state 73
    var            go to state 74
    constant       go to state 75
    const_int      go to state 76
    const_float    go to state 77
    const_char     go to state 78


State 188

   39 iter_stmt: FOR OPAR expr SEMICOLON expr SEMICOLON expr CPAR stmt .

    $default  reduce using rule 39 (iter_stmt)
